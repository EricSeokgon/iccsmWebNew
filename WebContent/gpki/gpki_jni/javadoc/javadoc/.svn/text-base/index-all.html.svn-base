<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=euc-kr">
<!-- Generated by javadoc (build 1.4.2_09) on Thu Nov 30 13:06:11 GMT+09:00 2006 -->
<TITLE>
Index
</TITLE>


<LINK REL ="stylesheet" TYPE="text/css" HREF="stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    parent.document.title="Index";
}
</SCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<b>GPKIAPI <br>V1.3.0.0</b></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV&nbsp;
&nbsp;NEXT</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="index.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-all.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>

</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<A HREF="#_A_">A</A> <A HREF="#_B_">B</A> <A HREF="#_C_">C</A> <A HREF="#_D_">D</A> <A HREF="#_E_">E</A> <A HREF="#_G_">G</A> <A HREF="#_H_">H</A> <A HREF="#_I_">I</A> <A HREF="#_K_">K</A> <A HREF="#_L_">L</A> <A HREF="#_M_">M</A> <A HREF="#_N_">N</A> <A HREF="#_O_">O</A> <A HREF="#_P_">P</A> <A HREF="#_R_">R</A> <A HREF="#_S_">S</A> <A HREF="#_T_">T</A> <A HREF="#_U_">U</A> <A HREF="#_V_">V</A> <A HREF="#_W_">W</A> <A HREF="#_X_">X</A> <HR>
<A NAME="_A_"><!-- --></A><H2>
<B>A</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi_jni.html#API_Finish()"><B>API_Finish()</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>JNI에서 사용하는 gpkiapi 동적 라이브러리를 해제한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#API_GetInfo()"><B>API_GetInfo()</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>라이센스 정보와 함께 API의 버전을 확인한다. 
<DT><A HREF="com/gpki/gpkiapi_jni.html#API_GetVersion()"><B>API_GetVersion()</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>API의 버전을 확인한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#API_Init(java.lang.String)"><B>API_Init(String)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>JNI에서 사용하는 gpkiapi 동적 라이브러리를 초기화한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#API_OPT_RSA_ENC_V15"><B>API_OPT_RSA_ENC_V15</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>RSA알고리즘을 이용한 암/복호화 시에 사용할 RSA 버전 (RSA V1.5)으로서
 기본값으로 API_OPT_RSA_ENC_V20가 설정되어있다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#API_OPT_RSA_ENC_V20"><B>API_OPT_RSA_ENC_V20</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>RSA알고리즘을 이용한 암/복호화 시에 사용할 RSA 버전(RSA V2.0) <b>(기본값)</b>
<DT><A HREF="com/gpki/gpkiapi_jni.html#API_SetOption(int)"><B>API_SetOption(int)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>API 사용 시, 필요한 옵션을 설정한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Algorithm.html" title="class in com.gpki.gpkiapi.crypto"><B>Algorithm</B></A> - class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Algorithm.html" title="class in com.gpki.gpkiapi.crypto">Algorithm</A>.<DD>API에서 내부적으로 알고리즘을 처리하기 위한 클래스<DT><A HREF="com/gpki/gpkiapi/crypto/Algorithm.html#Algorithm()"><B>Algorithm()</B></A> - 
Constructor for class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Algorithm.html" title="class in com.gpki.gpkiapi.crypto">Algorithm</A>
<DD>&nbsp;
<DT><A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html#addRecipient(com.gpki.gpkiapi.cert.X509Certificate)"><B>addRecipient(X509Certificate)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html" title="class in com.gpki.gpkiapi.cms">EnvelopedData</A>
<DD>암호 메시지 수신자의 인증서를 추가한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedData.html#addSigner(byte[], com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)"><B>addSigner(byte[], X509Certificate, PrivateKey)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedData.html" title="class in com.gpki.gpkiapi.cms">SignedData</A>
<DD>이미 생성된 서명 메시지에 서명을 추가한다. 
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#addTrustedRootCert(com.gpki.gpkiapi.cert.X509Certificate)"><B>addTrustedRootCert(X509Certificate)</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>인증서 검증을 위해서 신뢰하는 최상위 인증기관을 지정한다.
 
</DL>
<HR>
<A NAME="_B_"><!-- --></A><H2>
<B>B</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi_jni.html#BASE64_Decode(java.lang.String)"><B>BASE64_Decode(String)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>데이터를 BASE64 디코딩한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#BASE64_Encode(byte[])"><B>BASE64_Encode(byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>데이터를 BASE64 인코딩한다.
<DT><A HREF="com/gpki/gpkiapi/util/Base64.html" title="class in com.gpki.gpkiapi.util"><B>Base64</B></A> - class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Base64.html" title="class in com.gpki.gpkiapi.util">Base64</A>.<DD>BASE64 인코딩/디코딩을 수행한다.<DT><A HREF="com/gpki/gpkiapi/util/Base64.html#Base64()"><B>Base64()</B></A> - 
Constructor for class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Base64.html" title="class in com.gpki.gpkiapi.util">Base64</A>
<DD>BASE64 인코딩/디코딩을 위한 Base64 객체 초기화한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#baCertArray"><B>baCertArray</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>유선용 서명 메시지에 포함되어있는 복수의 서명자 인증서를 저장
<DT><A HREF="com/gpki/gpkiapi_jni.html#baData"><B>baData</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>함수의 output이 byte[] 형인 경우, 해당 output이 저장됨
<DT><A HREF="com/gpki/gpkiapi_jni.html#baIV"><B>baIV</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>함수에서 사용하는 대칭키 알고리즘의 IV 정보
<DT><A HREF="com/gpki/gpkiapi_jni.html#baKey"><B>baKey</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>함수에서 사용하는 대칭키 알고리즘의 키 정보
<DT><A HREF="com/gpki/gpkiapi_jni.html#baReturnArray"><B>baReturnArray</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>함수의 output이 byte[] 형인 경우, 해당 output이 저장됨
<DT><A HREF="com/gpki/gpkiapi_jni.html#baSignerCert"><B>baSignerCert</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>서명 메시지의 서명 주체 인증서가 저장됨
<DT><A HREF="com/gpki/gpkiapi_jni.html#baTSACert"><B>baTSACert</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>시점확인 서버로 부터 받은 응답 메시지에 포함된 시점확인 서버의 인증서가 저장됨
<DT><A HREF="com/gpki/gpkiapi_jni.html#baToken"><B>baToken</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>시점확인 서버로 부터 받은 응답 메시지에 포함된 시점확인 토큰이 저장됨
</DL>
<HR>
<A NAME="_C_"><!-- --></A><H2>
<B>C</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_AddCert(byte[])"><B>CERT_AddCert(byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서를 추가하여 복수개의 인증서 구조체를 만든다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_AddTrustedCert(byte[])"><B>CERT_AddTrustedCert(byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서 검증 시에 사용될 검증자가 신뢰하는 최상위 인증기관 인증서를 지정한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_GetBasicConstraints()"><B>CERT_GetBasicConstraints()</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>정보 확인을 위해 로드한 인증서의 기본제한 정보를 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_GetCert(byte[], int)"><B>CERT_GetCert(byte[], int)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>복수개의 인증서 구조체에 있는 특정 인덱스의 인증서를 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_GetCertCount(byte[])"><B>CERT_GetCertCount(byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>복수개의 인증서 구조체에 포함되어있는 인증서의 갯수를 확인한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_GetCertPolicyID()"><B>CERT_GetCertPolicyID()</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>정보 확인을 위해 로드한 인증서의 정책 식별자(OID)를 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_GetIssuerName()"><B>CERT_GetIssuerName()</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>정보 확인을 위해 로드한 인증서의 발급자 이름(DN)을 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_GetKeyUsage()"><B>CERT_GetKeyUsage()</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>정보 확인을 위해 로드한 인증서의 용도를 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_GetPubKeyAlg()"><B>CERT_GetPubKeyAlg()</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>정보 확인을 위해 로드한 인증서의 공개키 알고리즘을 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_GetRemainDays(byte[])"><B>CERT_GetRemainDays(byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>정보 확인을 위해 로드한 인증서의 남은 유효기간을 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_GetSerialNum()"><B>CERT_GetSerialNum()</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>정보 확인을 위해 로드한 인증서의 일련번호를 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_GetSubjectName()"><B>CERT_GetSubjectName()</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>정보 확인을 위해 로드한 인증서의 주체 이름(DN)을 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_GetUID()"><B>CERT_GetUID()</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>정보 확인을 위해 로드한 인증서의 주체 DN의 CN값을 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_GetValidity()"><B>CERT_GetValidity()</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>정보 확인을 위해 로드한 인증서의 유효기간을 획득한다.
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#CERT_KM"><B>CERT_KM</B></A> - 
Static variable in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>검증하는 인증서는 키분배용(암호화용) 인증서임
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_Load(byte[])"><B>CERT_Load(byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>정보를 확인하기 위한 인증서 메모리에 로드한다.
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#CERT_OCSP"><B>CERT_OCSP</B></A> - 
Static variable in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>검증하는 인증서는 OCSP 서버의 인증서 임
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_REV_CHECK_ALL"><B>CERT_REV_CHECK_ALL</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서 검증 시, 경로의 모든 인증서의 폐지여부를 확인하며,
 사용자 인증서 확인 시, OCSP를 우선적으로 이용하고 실패시 CRL을 이용 <b>(기본값)</b>
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_REV_CHECK_ARL"><B>CERT_REV_CHECK_ARL</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서 검증 시, 인증기관 인증서의 폐지여부를 ARL을 이용하여 확인함
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_REV_CHECK_CRL"><B>CERT_REV_CHECK_CRL</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서 검증 시, 사용자 인증서의 폐지여부를 CRL을 이용하여 확인함
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_REV_CHECK_NONE"><B>CERT_REV_CHECK_NONE</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서 검증 시, 인증서 폐지여부를 확인하지 않음
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_REV_CHECK_OCSP"><B>CERT_REV_CHECK_OCSP</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서 검증 시, 사용자 인증서의 폐지여부를 OCSP를 이용하여 확인함
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#CERT_SIGN"><B>CERT_SIGN</B></A> - 
Static variable in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>검증하는 인증서는 서명용 인증서임
<DT><A HREF="com/gpki/gpkiapi/ocsp/OCSPResponse.html#CERT_STATUS_HOLDED"><B>CERT_STATUS_HOLDED</B></A> - 
Static variable in class com.gpki.gpkiapi.ocsp.<A HREF="com/gpki/gpkiapi/ocsp/OCSPResponse.html" title="class in com.gpki.gpkiapi.ocsp">OCSPResponse</A>
<DD>인증서 효력이 정지됨
<DT><A HREF="com/gpki/gpkiapi/ocsp/OCSPResponse.html#CERT_STATUS_REVOKED"><B>CERT_STATUS_REVOKED</B></A> - 
Static variable in class com.gpki.gpkiapi.ocsp.<A HREF="com/gpki/gpkiapi/ocsp/OCSPResponse.html" title="class in com.gpki.gpkiapi.ocsp">OCSPResponse</A>
<DD>인증서가 폐지됨
<DT><A HREF="com/gpki/gpkiapi/ocsp/OCSPResponse.html#CERT_STATUS_VALID"><B>CERT_STATUS_VALID</B></A> - 
Static variable in class com.gpki.gpkiapi.ocsp.<A HREF="com/gpki/gpkiapi/ocsp/OCSPResponse.html" title="class in com.gpki.gpkiapi.ocsp">OCSPResponse</A>
<DD>인증서 상태 유효함
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_SetVerifyEnv(int, int, boolean, java.lang.String, java.lang.String)"><B>CERT_SetVerifyEnv(int, int, boolean, String, String)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서 검증 시, 필요한 옵션을 지정한다.
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#CERT_TSA"><B>CERT_TSA</B></A> - 
Static variable in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>검증하는 인증서는 시점확인 서버의 인증서 임
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_TYPE_KM"><B>CERT_TYPE_KM</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서 검증 시, 검증하고자하는 인증서의 종류가 키분배용인 경우에 설정한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_TYPE_OCSP"><B>CERT_TYPE_OCSP</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서 검증 시, 검증하고자하는 인증서의 종류가 OCSP 서버용인 경우에 설정한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_TYPE_SIGN"><B>CERT_TYPE_SIGN</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서 검증 시, 검증하고자하는 인증서의 종류가 서명용인 경우에 설정한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_TYPE_TSA"><B>CERT_TYPE_TSA</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서 검증 시, 검증하고자하는 인증서의 종류가 TSA 서버용인 경우에 설정한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_Unload()"><B>CERT_Unload()</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>정보 확인을 위해 메모리에 로드되어있던 인증서를 해제한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_VERIFY_CA_CERT"><B>CERT_VERIFY_CA_CERT</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서 검증 시, 최상위 인증기관 하위 인증기관 인증서까지 검증
 기본값으로 CERT_VERIFY_FULL_PATH 가 설정되어있음
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#CERT_VERIFY_FULL_PATH"><B>CERT_VERIFY_FULL_PATH</B></A> - 
Static variable in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>인증서를 최상위 인증기관부터 가입자 인증서까지 검증함
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_VERIFY_FULL_PATH"><B>CERT_VERIFY_FULL_PATH</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서 검증 시, 최상위 인증기관 인증서 부터 사용자 인증서까지 전체 경로를 검증 <b>(기본값)</b>
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#CERT_VERIFY_ONLY_USER"><B>CERT_VERIFY_ONLY_USER</B></A> - 
Static variable in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>가입자 인증서만 검증함 (인증서의 서명값, 유효기간)
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#CERT_VERIFY_ROOT2CA"><B>CERT_VERIFY_ROOT2CA</B></A> - 
Static variable in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>인증서를 최상위 인증기관부터 가입자의 발급자 인증서까지 검증함
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_VERIFY_USER_CERT"><B>CERT_VERIFY_USER_CERT</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서 검증 시, 사용자 인증서만을 검증한다.
 
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_Verify(byte[], int, java.lang.String, java.lang.String, boolean, byte[], byte[])"><B>CERT_Verify(byte[], int, String, String, boolean, byte[], byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서를 검증한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CERT_VerifyByIVS(java.lang.String, byte[], byte[])"><B>CERT_VerifyByIVS(String, byte[], byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>환경파일에있는 통합검증서버의 정보(IP, Port)를 이용하여 통합검증서버를 이용하여 인증서를 검증한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CMS_MakeEncryptedData(byte[])"><B>CMS_MakeEncryptedData(byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>이미 생성 또는 설정된 대칭키 알고리즘, 키, IV값을 이용하여 대칭키 암호 메시지를 생성한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CMS_MakeEnvelopedData(byte[], byte[], int)"><B>CMS_MakeEnvelopedData(byte[], byte[], int)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>데이터의 기밀성을 위하여 데이터를 암호화하여 유선용 암호 메시지를 생성한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CMS_MakeEnvelopedDataWithMultiRecipients(byte[], byte[], int)"><B>CMS_MakeEnvelopedDataWithMultiRecipients(byte[], byte[], int)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>데이터의 기밀성을 위하여 데이터를 암호화하여 유선용 암호 메시지를 생성한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CMS_MakeEnvelopedData_File(byte[], java.lang.String, int, java.lang.String)"><B>CMS_MakeEnvelopedData_File(byte[], String, int, String)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>데이터의 기밀성을 위하여 데이터를 암호화하여 유선용 암호 메시지를 생성한다. 
<DT><A HREF="com/gpki/gpkiapi_jni.html#CMS_MakeEnvelopedData_NoContent_File(byte[], java.lang.String, int, java.lang.String, java.lang.String)"><B>CMS_MakeEnvelopedData_NoContent_File(byte[], String, int, String, String)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>데이터의 기밀성을 위하여 데이터를 암호화하여 유선용 암호 메시지를 생성한다. 
<DT><A HREF="com/gpki/gpkiapi_jni.html#CMS_MakeSignedAndEnvData(byte[], byte[], byte[], byte[], int)"><B>CMS_MakeSignedAndEnvData(byte[], byte[], byte[], byte[], int)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>유선용 서명 및 암호 메시지를 생성한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CMS_MakeSignedData(byte[], byte[], byte[], java.lang.String)"><B>CMS_MakeSignedData(byte[], byte[], byte[], String)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>메시지의 무결성과 서명자의 인증을 위하여 유선용 서명 메시지를 생성한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CMS_MakeSignedDataWithAddSigner(byte[], byte[], byte[], java.lang.String)"><B>CMS_MakeSignedDataWithAddSigner(byte[], byte[], byte[], String)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>이미 생성된 유선용 서명 메시지에 서명을 추가한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CMS_ProcessEncryptedData(byte[], byte[])"><B>CMS_ProcessEncryptedData(byte[], byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>대칭키 암호 메시지를 복호화한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CMS_ProcessEnvelopedData(byte[], byte[], byte[])"><B>CMS_ProcessEnvelopedData(byte[], byte[], byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>유선용 암호 메시지를 복호화하여 원본 메시지를 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CMS_ProcessEnvelopedData_File(byte[], byte[], java.lang.String, java.lang.String)"><B>CMS_ProcessEnvelopedData_File(byte[], byte[], String, String)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>유선용 암호 메시지를 복호화하여 원본 메시지를 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CMS_ProcessEnvelopedData_NoContent_File(byte[], byte[], java.lang.String, java.lang.String, java.lang.String)"><B>CMS_ProcessEnvelopedData_NoContent_File(byte[], byte[], String, String, String)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>유선용 암호 메시지를 복호화하여 원본 메시지를 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CMS_ProcessSignedAndEnvData(byte[], byte[], byte[])"><B>CMS_ProcessSignedAndEnvData(byte[], byte[], byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>유선용 서명 및 암호 메시지를 처리한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CMS_ProcessSignedData(byte[])"><B>CMS_ProcessSignedData(byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>유선용 서명 메시지의 서명을 검증하고 원본 데이터와 서명자 정보를 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CMS_ProcessSignedData2(byte[])"><B>CMS_ProcessSignedData2(byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>유선용 서명 메시지의 서명을 검증하고 원본 데이터와 복수의 서명자 정보를 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CRYPT_AsymDecrypt(int, byte[], byte[])"><B>CRYPT_AsymDecrypt(int, byte[], byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>비대칭키를 이용하여 복호화한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CRYPT_AsymEncrypt(int, byte[], byte[])"><B>CRYPT_AsymEncrypt(int, byte[], byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>비대칭키를 이용하여 암호화한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CRYPT_ClearKeyAndIV()"><B>CRYPT_ClearKeyAndIV()</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>설정되어있는 대칭키 알고리즘과 키, IV를 삭제한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CRYPT_Decrypt(byte[])"><B>CRYPT_Decrypt(byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>설정되어있는 대칭키 정보를 이용하여 데이터를 복호화한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CRYPT_Decrypt_File(java.lang.String, java.lang.String)"><B>CRYPT_Decrypt_File(String, String)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>설정되어있는 대칭키 정보를 이용하여 파일을 복호화한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CRYPT_Encrypt(byte[])"><B>CRYPT_Encrypt(byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>설정되어있는 대칭키 정보를 이용하여 데이터를 암호화한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CRYPT_Encrypt_File(java.lang.String, java.lang.String)"><B>CRYPT_Encrypt_File(String, String)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>설정되어있는 대칭키 정보를 이용하여 파일을 암호화한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CRYPT_GenKeyAndIV(int)"><B>CRYPT_GenKeyAndIV(int)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>대칭키 알고리즘에 따른 키와 IV를 생성하여 환경변수에 설정한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CRYPT_GenMAC(int, java.lang.String, byte[])"><B>CRYPT_GenMAC(int, String, byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>데이터의 MAC값을 생성한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CRYPT_GenRandom(int)"><B>CRYPT_GenRandom(int)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>임의 길이의 난수를 생성한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CRYPT_GetKeyAndIV()"><B>CRYPT_GetKeyAndIV()</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>설정되어있는 대칭키 알고리즘과 키, IV를 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CRYPT_Hash(int, byte[])"><B>CRYPT_Hash(int, byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>해쉬알고리즘을 이용하여 메시지 다이제스트를 생성한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CRYPT_SetKeyAndIV(int, byte[], byte[])"><B>CRYPT_SetKeyAndIV(int, byte[], byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>대칭키 알고리즘에 따른 키와 IV를 설정한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CRYPT_Sign(byte[], byte[], int, byte[])"><B>CRYPT_Sign(byte[], byte[], int, byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>개인키를 이용하여 메시지의 서명값을 생성한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CRYPT_Verify(byte[], int, byte[], byte[])"><B>CRYPT_Verify(byte[], int, byte[], byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>공개키와 원본 메시지를 이용하여 서명값을 검증한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#CRYPT_VerifyMAC(int, java.lang.String, byte[], byte[])"><B>CRYPT_VerifyMAC(int, String, byte[], byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>데이터의 MAC값을 검증한다.
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert"><B>CertPathValidator</B></A> - class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>.<DD>&nbsp;<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#CertPathValidator(java.lang.String)"><B>CertPathValidator(String)</B></A> - 
Constructor for class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>환경 파일 위치 정보를 설정하여 인증서 검증 객체를 초기화한다.
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#CertPathValidator(java.lang.String, int, int, boolean)"><B>CertPathValidator(String, int, int, boolean)</B></A> - 
Constructor for class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>검증 환경을 설정하여 인증서 검증 객체를 초기화한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Cipher.html" title="class in com.gpki.gpkiapi.crypto"><B>Cipher</B></A> - class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Cipher.html" title="class in com.gpki.gpkiapi.crypto">Cipher</A>.<DD>대칭키 암/복호화를 지원한다.<DT><A HREF="com/gpki/gpkiapi/crypto/Cipher.html#Cipher()"><B>Cipher()</B></A> - 
Constructor for class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Cipher.html" title="class in com.gpki.gpkiapi.crypto">Cipher</A>
<DD>&nbsp;
<DT><A HREF="com/gpki/gpkiapi/crypto/Algorithm.html#code2id(int)"><B>code2id(int)</B></A> - 
Static method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Algorithm.html" title="class in com.gpki.gpkiapi.crypto">Algorithm</A>
<DD>JAVA에서 사용하는 알고리즘 코드를 C에서 사용하는 알고리즘 코드로 변환한다.
<DT><A HREF="com/gpki/package-summary.html"><B>com.gpki</B></A> - package com.gpki<DD>표준보안API V1.1.2.2 버전 까지 제공하던 표준보안API 패키지로서 하위호환성을 위해서 제공된다. <DT><A HREF="com/gpki/gpkiapi/package-summary.html"><B>com.gpki.gpkiapi</B></A> - package com.gpki.gpkiapi<DD>표준보안API를 초기화한다.<DT><A HREF="com/gpki/gpkiapi/cert/package-summary.html"><B>com.gpki.gpkiapi.cert</B></A> - package com.gpki.gpkiapi.cert<DD>X.509 형식의 인증서 정보를 확인한다.<DT><A HREF="com/gpki/gpkiapi/cms/package-summary.html"><B>com.gpki.gpkiapi.cms</B></A> - package com.gpki.gpkiapi.cms<DD>유/무선 환경에서 메시지에 대한 인증, 무결성, 기밀성 서비스를 제공하기 위해서 메시지 서명, 암호화 기능을 제공한다.<DT><A HREF="com/gpki/gpkiapi/crypto/package-summary.html"><B>com.gpki.gpkiapi.crypto</B></A> - package com.gpki.gpkiapi.crypto<DD>서명/검증, 암/복호화, 해쉬, 맥값 생성/검증을 위한 암호 알고리즘을 제공한다.<DT><A HREF="com/gpki/gpkiapi/exception/package-summary.html"><B>com.gpki.gpkiapi.exception</B></A> - package com.gpki.gpkiapi.exception<DD>표준보안API 사용 시, 예외 발생을 처리한다.<DT><A HREF="com/gpki/gpkiapi/ivs/package-summary.html"><B>com.gpki.gpkiapi.ivs</B></A> - package com.gpki.gpkiapi.ivs<DD>통합검증서버를 이용하여 인증서 검증, 본인확인을 수행한다.<DT><A HREF="com/gpki/gpkiapi/ocsp/package-summary.html"><B>com.gpki.gpkiapi.ocsp</B></A> - package com.gpki.gpkiapi.ocsp<DD>&nbsp;<DT><A HREF="com/gpki/gpkiapi/pkcs/package-summary.html"><B>com.gpki.gpkiapi.pkcs</B></A> - package com.gpki.gpkiapi.pkcs<DD>개인키를 비밀번호를 이용하여 암/복호화 한다.<DT><A HREF="com/gpki/gpkiapi/storage/package-summary.html"><B>com.gpki.gpkiapi.storage</B></A> - package com.gpki.gpkiapi.storage<DD>디스크, 스마트 카드로 부터 개인키, 인증서를 저장/읽기/삭제를 수행한다.<DT><A HREF="com/gpki/gpkiapi/tsa/package-summary.html"><B>com.gpki.gpkiapi.tsa</B></A> - package com.gpki.gpkiapi.tsa<DD>특정 시점에 메시지가 존재하였음을 증명하기 위한 시점 확인 서비스를 이용한다.<DT><A HREF="com/gpki/gpkiapi/util/package-summary.html"><B>com.gpki.gpkiapi.util</B></A> - package com.gpki.gpkiapi.util<DD>표준보안API를 사용하면서 부가적으로 필요한 유틸을 제공한다.</DL>
<HR>
<A NAME="_D_"><!-- --></A><H2>
<B>D</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi/util/Pem.html#DATA_CRL"><B>DATA_CRL</B></A> - 
Static variable in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Pem.html" title="class in com.gpki.gpkiapi.util">Pem</A>
<DD>인증서 폐지 목록
<DT><A HREF="com/gpki/gpkiapi/util/Pem.html#DATA_CTL"><B>DATA_CTL</B></A> - 
Static variable in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Pem.html" title="class in com.gpki.gpkiapi.util">Pem</A>
<DD>최상위 인증서 신뢰 목록
<DT><A HREF="com/gpki/gpkiapi/util/Pem.html#DATA_NO_HEADER_TAIL"><B>DATA_NO_HEADER_TAIL</B></A> - 
Static variable in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Pem.html" title="class in com.gpki.gpkiapi.util">Pem</A>
<DD>PEM형식에서 "----"로 시작하는 첫번째와 마지막라인을 넣지않음
<DT><A HREF="com/gpki/gpkiapi/util/Pem.html#DATA_PKCS7"><B>DATA_PKCS7</B></A> - 
Static variable in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Pem.html" title="class in com.gpki.gpkiapi.util">Pem</A>
<DD>PKCS7 데이터
<DT><A HREF="com/gpki/gpkiapi/util/Ldap.html#DATA_TYPE_ARL"><B>DATA_TYPE_ARL</B></A> - 
Static variable in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Ldap.html" title="class in com.gpki.gpkiapi.util">Ldap</A>
<DD>인증기관 인증서의 폐지 목록 (ARL)
<DT><A HREF="com/gpki/gpkiapi/util/Ldap.html#DATA_TYPE_CA_CERT"><B>DATA_TYPE_CA_CERT</B></A> - 
Static variable in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Ldap.html" title="class in com.gpki.gpkiapi.util">Ldap</A>
<DD>인증기관용 인증서
<DT><A HREF="com/gpki/gpkiapi/util/Ldap.html#DATA_TYPE_CRL"><B>DATA_TYPE_CRL</B></A> - 
Static variable in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Ldap.html" title="class in com.gpki.gpkiapi.util">Ldap</A>
<DD>사용자 인증서의 폐지 목록 (CRL)
<DT><A HREF="com/gpki/gpkiapi/util/Ldap.html#DATA_TYPE_CTL"><B>DATA_TYPE_CTL</B></A> - 
Static variable in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Ldap.html" title="class in com.gpki.gpkiapi.util">Ldap</A>
<DD>인증서 신뢰 목록 (CTL)
<DT><A HREF="com/gpki/gpkiapi/util/Ldap.html#DATA_TYPE_DELTA_CRL"><B>DATA_TYPE_DELTA_CRL</B></A> - 
Static variable in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Ldap.html" title="class in com.gpki.gpkiapi.util">Ldap</A>
<DD>사용자 인증서의 델타 폐지 목록 (Delta CRL)
<DT><A HREF="com/gpki/gpkiapi/storage/SmartCard.html#DATA_TYPE_GPKI_KM"><B>DATA_TYPE_GPKI_KM</B></A> - 
Static variable in class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/SmartCard.html" title="class in com.gpki.gpkiapi.storage">SmartCard</A>
<DD>행정인증기관 키분배용 인증서/개인키를 읽기(또는 저장)한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#DATA_TYPE_GPKI_KM"><B>DATA_TYPE_GPKI_KM</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>저장매체에서 행정 키분배용 인증서/개인키를 다루는 경우
<DT><A HREF="com/gpki/gpkiapi/storage/SmartCard.html#DATA_TYPE_GPKI_SIGN"><B>DATA_TYPE_GPKI_SIGN</B></A> - 
Static variable in class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/SmartCard.html" title="class in com.gpki.gpkiapi.storage">SmartCard</A>
<DD>행정인증기관 서명용 인증서/개인키를 읽기(또는 저장)한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#DATA_TYPE_GPKI_SIGN"><B>DATA_TYPE_GPKI_SIGN</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>저장매체에서 행정 서명용 인증서/개인키를 다루는 경우
<DT><A HREF="com/gpki/gpkiapi/util/Ldap.html#DATA_TYPE_GPKI_WCERT"><B>DATA_TYPE_GPKI_WCERT</B></A> - 
Static variable in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Ldap.html" title="class in com.gpki.gpkiapi.util">Ldap</A>
<DD>행정 무선 인증체계의 인증서
<DT><A HREF="com/gpki/gpkiapi/util/Ldap.html#DATA_TYPE_KM_CERT"><B>DATA_TYPE_KM_CERT</B></A> - 
Static variable in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Ldap.html" title="class in com.gpki.gpkiapi.util">Ldap</A>
<DD>키분배용 사용자 인증서
<DT><A HREF="com/gpki/gpkiapi/storage/SmartCard.html#DATA_TYPE_NPKI_KM"><B>DATA_TYPE_NPKI_KM</B></A> - 
Static variable in class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/SmartCard.html" title="class in com.gpki.gpkiapi.storage">SmartCard</A>
<DD>공인인증기관 키분배용 인증서/개인키를 읽기(또는 저장)한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#DATA_TYPE_NPKI_KM"><B>DATA_TYPE_NPKI_KM</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>저장매체에서 민간 키분배용 인증서/개인키를 다루는 경우
<DT><A HREF="com/gpki/gpkiapi/storage/SmartCard.html#DATA_TYPE_NPKI_SIGN"><B>DATA_TYPE_NPKI_SIGN</B></A> - 
Static variable in class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/SmartCard.html" title="class in com.gpki.gpkiapi.storage">SmartCard</A>
<DD>공인인증기관 서명용 인증서/개인키를 읽기(또는 저장)한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#DATA_TYPE_NPKI_SIGN"><B>DATA_TYPE_NPKI_SIGN</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>저장매체에서 민간 서명용 인증서/개인키를 다루는 경우
<DT><A HREF="com/gpki/gpkiapi_jni.html#DATA_TYPE_OTHER"><B>DATA_TYPE_OTHER</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>저장매체에서 임의 위치의 개인키/인증서를 다루는 경우
<DT><A HREF="com/gpki/gpkiapi/util/Ldap.html#DATA_TYPE_SIGN_CERT"><B>DATA_TYPE_SIGN_CERT</B></A> - 
Static variable in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Ldap.html" title="class in com.gpki.gpkiapi.util">Ldap</A>
<DD>서명용 사용자 인증서
<DT><A HREF="com/gpki/gpkiapi/util/Pem.html#DATA_WTLS_CERT"><B>DATA_WTLS_CERT</B></A> - 
Static variable in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Pem.html" title="class in com.gpki.gpkiapi.util">Pem</A>
<DD>WTLS 인증서
<DT><A HREF="com/gpki/gpkiapi/util/Pem.html#DATA_X509_CERT"><B>DATA_X509_CERT</B></A> - 
Static variable in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Pem.html" title="class in com.gpki.gpkiapi.util">Pem</A>
<DD>X.509 인증서
<DT><A HREF="com/gpki/gpkiapi/crypto/Cipher.html#DECRYPT_MODE"><B>DECRYPT_MODE</B></A> - 
Static variable in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Cipher.html" title="class in com.gpki.gpkiapi.crypto">Cipher</A>
<DD>Cipher를 복호화 모드로 초기화 시 사용
<DT><A HREF="com/gpki/gpkiapi/storage/Disk.html" title="class in com.gpki.gpkiapi.storage"><B>Disk</B></A> - class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/Disk.html" title="class in com.gpki.gpkiapi.storage">Disk</A>.<DD>디스크(하드디스크, 플로피 디스크 등)로 부터 인증서, 개인키, 파일을 읽어들이거나 디스크에 인증서, 개인키를 저장한다.<DT><A HREF="com/gpki/gpkiapi/storage/Disk.html#Disk()"><B>Disk()</B></A> - 
Constructor for class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/Disk.html" title="class in com.gpki.gpkiapi.storage">Disk</A>
<DD>&nbsp;
<DT><A HREF="com/gpki/gpkiapi/util/Dump.html" title="class in com.gpki.gpkiapi.util"><B>Dump</B></A> - class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Dump.html" title="class in com.gpki.gpkiapi.util">Dump</A>.<DD>binay 데이터를 HexString으로 화면에 찍거나 로그파일("dump.log")에 저장한다.<DT><A HREF="com/gpki/gpkiapi/util/Dump.html#Dump()"><B>Dump()</B></A> - 
Constructor for class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Dump.html" title="class in com.gpki.gpkiapi.util">Dump</A>
<DD>&nbsp;
<DT><A HREF="com/gpki/gpkiapi/util/Base64.html#decode(java.lang.String)"><B>decode(String)</B></A> - 
Method in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Base64.html" title="class in com.gpki.gpkiapi.util">Base64</A>
<DD>BASE64 디코딩을 수행한다.
<DT><A HREF="com/gpki/gpkiapi/util/Pem.html#decode(java.lang.String)"><B>decode(String)</B></A> - 
Method in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Pem.html" title="class in com.gpki.gpkiapi.util">Pem</A>
<DD>PEM 디코딩을 수행한다.
<DT><A HREF="com/gpki/gpkiapi/pkcs/Pkcs5.html#decrypt(byte[], java.lang.String)"><B>decrypt(byte[], String)</B></A> - 
Method in class com.gpki.gpkiapi.pkcs.<A HREF="com/gpki/gpkiapi/pkcs/Pkcs5.html" title="class in com.gpki.gpkiapi.pkcs">Pkcs5</A>
<DD>개인키를 비밀번호를 이용하여 복호화한다.
<DT><A HREF="com/gpki/gpkiapi/storage/SmartCard.html#deleteCert(int, java.lang.String)"><B>deleteCert(int, String)</B></A> - 
Method in class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/SmartCard.html" title="class in com.gpki.gpkiapi.storage">SmartCard</A>
<DD>지정한 인증서를 삭제한다.
<DT><A HREF="com/gpki/gpkiapi/storage/SmartCard.html#deletePriKey(int, java.lang.String, java.lang.String)"><B>deletePriKey(int, String, String)</B></A> - 
Method in class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/SmartCard.html" title="class in com.gpki.gpkiapi.storage">SmartCard</A>
<DD>지정한 개인키를 삭제한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/MessageDigest.html#digest(byte[])"><B>digest(byte[])</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/MessageDigest.html" title="class in com.gpki.gpkiapi.crypto">MessageDigest</A>
<DD>메시지 다이제스트를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Cipher.html#doFinal(byte[])"><B>doFinal(byte[])</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Cipher.html" title="class in com.gpki.gpkiapi.crypto">Cipher</A>
<DD>초기화(init)시에 지정한 모드로 연산(암호화/복호화)을 수행한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Cipher.html#doFinal_File(java.lang.String, java.lang.String)"><B>doFinal_File(String, String)</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Cipher.html" title="class in com.gpki.gpkiapi.crypto">Cipher</A>
<DD>초기화(init)시에 지정한 모드로 연산(암호화/복호화)을 수행한다.
<DT><A HREF="com/gpki/gpkiapi/util/Dump.html#dump(byte[])"><B>dump(byte[])</B></A> - 
Static method in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Dump.html" title="class in com.gpki.gpkiapi.util">Dump</A>
<DD>byte[]를 HexString으로 바꾸어서 Console Print
<DT><A HREF="com/gpki/gpkiapi/util/Dump.html#dump(byte[], int)"><B>dump(byte[], int)</B></A> - 
Static method in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Dump.html" title="class in com.gpki.gpkiapi.util">Dump</A>
<DD>byte[]를 Hex,Oct String 으로 바꾸어서 Console Print
 주)현재는 Hex String만을 지원한다.
</DL>
<HR>
<A NAME="_E_"><!-- --></A><H2>
<B>E</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi/crypto/Cipher.html#ENCRYPT_MODE"><B>ENCRYPT_MODE</B></A> - 
Static variable in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Cipher.html" title="class in com.gpki.gpkiapi.crypto">Cipher</A>
<DD>Cipher를 암호화 모드로 초기화 시 사용
<DT><A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html" title="class in com.gpki.gpkiapi.cms"><B>EnvelopedData</B></A> - class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html" title="class in com.gpki.gpkiapi.cms">EnvelopedData</A>.<DD>유선 환경에서 비대칭키 암호 메시지(PKCS#7)를 생성/처리한다.<DT><A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html#EnvelopedData()"><B>EnvelopedData()</B></A> - 
Constructor for class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html" title="class in com.gpki.gpkiapi.cms">EnvelopedData</A>
<DD>암호 메시지 생성/처리를 위한 EnvelopedData 객체를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html#EnvelopedData(java.lang.String)"><B>EnvelopedData(String)</B></A> - 
Constructor for class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html" title="class in com.gpki.gpkiapi.cms">EnvelopedData</A>
<DD>사용할 대칭키 알고리즘을 설정하여 EnvelopedData 객체를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/util/Base64.html#encode(byte[])"><B>encode(byte[])</B></A> - 
Method in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Base64.html" title="class in com.gpki.gpkiapi.util">Base64</A>
<DD>BASE64 인코딩을 수행한다.
<DT><A HREF="com/gpki/gpkiapi/util/Pem.html#encode(int, byte[])"><B>encode(int, byte[])</B></A> - 
Method in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Pem.html" title="class in com.gpki.gpkiapi.util">Pem</A>
<DD>PEM 인코딩을 수행한다.
<DT><A HREF="com/gpki/gpkiapi/pkcs/Pkcs5.html#encrypt(com.gpki.gpkiapi.crypto.PrivateKey, java.lang.String, java.lang.String)"><B>encrypt(PrivateKey, String, String)</B></A> - 
Method in class com.gpki.gpkiapi.pkcs.<A HREF="com/gpki/gpkiapi/pkcs/Pkcs5.html" title="class in com.gpki.gpkiapi.pkcs">Pkcs5</A>
<DD>개인키를 비밀번호를 이용하여 암호화한다.
</DL>
<HR>
<A NAME="_G_"><!-- --></A><H2>
<B>G</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi/GpkiApi.html" title="class in com.gpki.gpkiapi"><B>GpkiApi</B></A> - class com.gpki.gpkiapi.<A HREF="com/gpki/gpkiapi/GpkiApi.html" title="class in com.gpki.gpkiapi">GpkiApi</A>.<DD>표준보안API 사용을 위해서는 해당 클래스의 init 함수를 이용하여 초기화 해 주어야 한다.
 <DT><A HREF="com/gpki/gpkiapi/GpkiApi.html#GpkiApi()"><B>GpkiApi()</B></A> - 
Constructor for class com.gpki.gpkiapi.<A HREF="com/gpki/gpkiapi/GpkiApi.html" title="class in com.gpki.gpkiapi">GpkiApi</A>
<DD>해당 크래스의 새로운 객체를 초기화한다.
<DT><A HREF="com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception"><B>GpkiApiException</B></A> - exception com.gpki.gpkiapi.exception.<A HREF="com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A>.<DD>표준보안API 사용 시, 발생하는 예외 상황에 대한 원인을 처리한다.<DT><A HREF="com/gpki/gpkiapi/exception/GpkiApiException.html#GpkiApiException(java.lang.String)"><B>GpkiApiException(String)</B></A> - 
Constructor for class com.gpki.gpkiapi.exception.<A HREF="com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A>
<DD>에러 메시지로 GpkiApiException을 초기화 한다. 
<DT><A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html#generate(byte[])"><B>generate(byte[])</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html" title="class in com.gpki.gpkiapi.cms">EnvelopedData</A>
<DD>암호 메시지를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html#generate(com.gpki.gpkiapi.cert.X509Certificate, byte[])"><B>generate(X509Certificate, byte[])</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html" title="class in com.gpki.gpkiapi.cms">SignedAndEnvelopedData</A>
<DD>서명 및 암호 메시지를 생성한다. 
<DT><A HREF="com/gpki/gpkiapi/cms/SignedContent.html#generate(byte[], com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)"><B>generate(byte[], X509Certificate, PrivateKey)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedContent.html" title="class in com.gpki.gpkiapi.cms">SignedContent</A>
<DD>서명 메시지를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedData.html#generate(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)"><B>generate(X509Certificate, PrivateKey)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedData.html" title="class in com.gpki.gpkiapi.cms">SignedData</A>
<DD>서명 메시지를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/cms/WapEnvelopedData.html#generate(byte[], com.gpki.gpkiapi.cert.X509Certificate)"><B>generate(byte[], X509Certificate)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/WapEnvelopedData.html" title="class in com.gpki.gpkiapi.cms">WapEnvelopedData</A>
<DD>암호 메시지를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Mac.html#generate(byte[])"><B>generate(byte[])</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Mac.html" title="class in com.gpki.gpkiapi.crypto">Mac</A>
<DD>입력되는 데이터의 인증코드를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/KeyGenerator.html#generateKey()"><B>generateKey()</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/KeyGenerator.html" title="class in com.gpki.gpkiapi.crypto">KeyGenerator</A>
<DD>지정된 키 알고리즘에 따른 대칭키를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Random.html#generateRandom(int)"><B>generateRandom(int)</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Random.html" title="class in com.gpki.gpkiapi.crypto">Random</A>
<DD>원하는 길이의 랜덤값을 생성한다.
<DT><A HREF="com/gpki/gpkiapi/ocsp/OCSPRequest.html#generateReqMsg(com.gpki.gpkiapi.cert.X509Certificate)"><B>generateReqMsg(X509Certificate)</B></A> - 
Method in class com.gpki.gpkiapi.ocsp.<A HREF="com/gpki/gpkiapi/ocsp/OCSPRequest.html" title="class in com.gpki.gpkiapi.ocsp">OCSPRequest</A>
<DD>OCSP 요청 메시지를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html#generate_File(java.lang.String, java.lang.String)"><B>generate_File(String, String)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html" title="class in com.gpki.gpkiapi.cms">EnvelopedData</A>
<DD>파일 형태의 원본 메시지에 대한 암호 메시지를 생성하여 파일로 저장한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedData.html#generate_File(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey, java.lang.String)"><B>generate_File(X509Certificate, PrivateKey, String)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedData.html" title="class in com.gpki.gpkiapi.cms">SignedData</A>
<DD>서명 메시지를 생성하여 파일로 저장한다.
<DT><A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html#generate_noConetnt_File(java.lang.String, java.lang.String, java.lang.String)"><B>generate_noConetnt_File(String, String, String)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html" title="class in com.gpki.gpkiapi.cms">EnvelopedData</A>
<DD>파일 형태의 원본 메시지에 대한 암호 메시지를 생성하여 파일로 저장한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedData.html#generate_noContent_File(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey, java.lang.String)"><B>generate_noContent_File(X509Certificate, PrivateKey, String)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedData.html" title="class in com.gpki.gpkiapi.cms">SignedData</A>
<DD>서명 메시지를 생성하여 파일로 저장한다. 
<DT><A HREF="com/gpki/gpkiapi/cert/X509Certificate.html#getBasicConstsraints()"><B>getBasicConstsraints()</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>
<DD>인증서의 확장필드인 기본 제한 값을 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#getCMS_GetSignTime(int)"><B>getCMS_GetSignTime(int)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>CMS_ProcessSignedData2 메소드를 이용하여 서명 메시지를 검증하였을 경우 서명 시간을 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#getCMS_GetSinger(int)"><B>getCMS_GetSinger(int)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>CMS_ProcessSignedData2 메소드를 이용하여 서명 메시지를 검증하였을 경우 서명자 인증서를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/cert/X509Certificate.html#getCert()"><B>getCert()</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>
<DD>DER 형식의 인증서 데이터를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/cert/X509Certificate.html#getCertPolicy()"><B>getCertPolicy()</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>
<DD>인증서의 확장필드인 인증서 정책 정보를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/ocsp/OCSPResponse.html#getCertStatus()"><B>getCertStatus()</B></A> - 
Method in class com.gpki.gpkiapi.ocsp.<A HREF="com/gpki/gpkiapi/ocsp/OCSPResponse.html" title="class in com.gpki.gpkiapi.ocsp">OCSPResponse</A>
<DD>요청한 인증서의 상태를 확인한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Algorithm.html#getCipherAlg(java.lang.String)"><B>getCipherAlg(String)</B></A> - 
Static method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Algorithm.html" title="class in com.gpki.gpkiapi.crypto">Algorithm</A>
<DD>암/복호화 알고리즘의 코드값을 획득한다.
<DT><A HREF="com/gpki/gpkiapi/util/Ldap.html#getDN()"><B>getDN()</B></A> - 
Method in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Ldap.html" title="class in com.gpki.gpkiapi.util">Ldap</A>
<DD>메소드 searchCN()을 통하여 검색된 엔트리의 DN을 돌려준다.
<DT><A HREF="com/gpki/gpkiapi/util/Ldap.html#getData(int, java.lang.String)"><B>getData(int, String)</B></A> - 
Method in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Ldap.html" title="class in com.gpki.gpkiapi.util">Ldap</A>
<DD>해당 엔트리에 게시되어있는 데이터를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/util/Ldap.html#getData(java.lang.String, java.lang.String)"><B>getData(String, String)</B></A> - 
Method in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Ldap.html" title="class in com.gpki.gpkiapi.util">Ldap</A>
<DD>해당 엔트리에 게시되어있는 데이터를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/util/Ldap.html#getData()"><B>getData()</B></A> - 
Method in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Ldap.html" title="class in com.gpki.gpkiapi.util">Ldap</A>
<DD>메소드 searchCN()을 통하여 검색된 해당 엔트리에서 획득한 데이터를 돌려준다.
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html#getGeneratedTime()"><B>getGeneratedTime()</B></A> - 
Method in class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html" title="class in com.gpki.gpkiapi.tsa">TimeStampToken</A>
<DD>시점확인 서버의 토큰 생성 시간을 획득한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Algorithm.html#getHashAlg(java.lang.String)"><B>getHashAlg(String)</B></A> - 
Static method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Algorithm.html" title="class in com.gpki.gpkiapi.crypto">Algorithm</A>
<DD>Hash 알고리즘의 코드값을 획득한다.
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html#getHashAlgorithm()"><B>getHashAlgorithm()</B></A> - 
Method in class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html" title="class in com.gpki.gpkiapi.tsa">TimeStampToken</A>
<DD>시점확인 토큰을 요청한 메시지의 해쉬값 생성 알고리즘을 획득한다.
<DT><A HREF="com/gpki/gpkiapi/util/Dump.html#getHexString(byte)"><B>getHexString(byte)</B></A> - 
Static method in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Dump.html" title="class in com.gpki.gpkiapi.util">Dump</A>
<DD>1 byte을 hexString으로 반환
<DT><A HREF="com/gpki/gpkiapi/util/Dump.html#getHexString(long, int)"><B>getHexString(long, int)</B></A> - 
Static method in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Dump.html" title="class in com.gpki.gpkiapi.util">Dump</A>
<DD>long을 hexString으로 반환
<DT><A HREF="com/gpki/gpkiapi/crypto/Cipher.html#getInstance(java.lang.String)"><B>getInstance(String)</B></A> - 
Static method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Cipher.html" title="class in com.gpki.gpkiapi.crypto">Cipher</A>
<DD>특정 암/복호화 연산을 수행할 수 있는 Cipher 객체를 생성한다.
 
<DT><A HREF="com/gpki/gpkiapi/crypto/KeyGenerator.html#getInstance(java.lang.String)"><B>getInstance(String)</B></A> - 
Static method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/KeyGenerator.html" title="class in com.gpki.gpkiapi.crypto">KeyGenerator</A>
<DD>특정 대칭키를 생성을 수행할 수 있는 KeyGenerator 객체를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Mac.html#getInstance(java.lang.String)"><B>getInstance(String)</B></A> - 
Static method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Mac.html" title="class in com.gpki.gpkiapi.crypto">Mac</A>
<DD>특정 알고리즘에 따른 인증코드 생성을 수행할 수 있는 Mac 객체를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/MessageDigest.html#getInstance(java.lang.String)"><B>getInstance(String)</B></A> - 
Static method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/MessageDigest.html" title="class in com.gpki.gpkiapi.crypto">MessageDigest</A>
<DD>특정 알고리즘에 따른 메시지 다이제스트를 생성할 수 있는 MessageDigest 객체를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/cert/X509Certificate.html#getIssuerDN()"><B>getIssuerDN()</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>
<DD>인증서의 발급자 이름(DN)을 획득한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/SecretKey.html#getIv()"><B>getIv()</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/SecretKey.html" title="class in com.gpki.gpkiapi.crypto">SecretKey</A>
<DD>초기벡터를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Key.html#getKey()"><B>getKey()</B></A> - 
Method in interface com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Key.html" title="interface in com.gpki.gpkiapi.crypto">Key</A>
<DD>키값을 획득한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/PrivateKey.html#getKey()"><B>getKey()</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>
<DD>&nbsp;
<DT><A HREF="com/gpki/gpkiapi/crypto/PublicKey.html#getKey()"><B>getKey()</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/PublicKey.html" title="class in com.gpki.gpkiapi.crypto">PublicKey</A>
<DD>&nbsp;
<DT><A HREF="com/gpki/gpkiapi/crypto/SecretKey.html#getKey()"><B>getKey()</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/SecretKey.html" title="class in com.gpki.gpkiapi.crypto">SecretKey</A>
<DD>비밀키를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Key.html#getKeyAlg()"><B>getKeyAlg()</B></A> - 
Method in interface com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Key.html" title="interface in com.gpki.gpkiapi.crypto">Key</A>
<DD>키 알고리즘을 획득한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/PrivateKey.html#getKeyAlg()"><B>getKeyAlg()</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>
<DD>&nbsp;
<DT><A HREF="com/gpki/gpkiapi/crypto/PublicKey.html#getKeyAlg()"><B>getKeyAlg()</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/PublicKey.html" title="class in com.gpki.gpkiapi.crypto">PublicKey</A>
<DD>&nbsp;
<DT><A HREF="com/gpki/gpkiapi/crypto/SecretKey.html#getKeyAlg()"><B>getKeyAlg()</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/SecretKey.html" title="class in com.gpki.gpkiapi.crypto">SecretKey</A>
<DD>키 알고리즘 정보 획득한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/PrivateKey.html#getKeyLen()"><B>getKeyLen()</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>
<DD>키 길이 정보를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/PublicKey.html#getKeyLen()"><B>getKeyLen()</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/PublicKey.html" title="class in com.gpki.gpkiapi.crypto">PublicKey</A>
<DD>키 길이 정보를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Algorithm.html#getKeyPairAlg(java.lang.String)"><B>getKeyPairAlg(String)</B></A> - 
Static method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Algorithm.html" title="class in com.gpki.gpkiapi.crypto">Algorithm</A>
<DD>비대칭키 알고리즘의 코드값을 획득한다.
<DT><A HREF="com/gpki/gpkiapi/cert/X509Certificate.html#getKeyUsage()"><B>getKeyUsage()</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>
<DD>인증서의 확장필드인 키 용도 값을 획득한다. 
<DT><A HREF="com/gpki/gpkiapi/crypto/Algorithm.html#getMacAlg(java.lang.String)"><B>getMacAlg(String)</B></A> - 
Static method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Algorithm.html" title="class in com.gpki.gpkiapi.crypto">Algorithm</A>
<DD>MAC 알고리즘의 코드값을 획득한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedContent.html#getMessage()"><B>getMessage()</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedContent.html" title="class in com.gpki.gpkiapi.cms">SignedContent</A>
<DD>서명 메시지 검증 후, 원본 메시지를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedData.html#getMessage()"><B>getMessage()</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedData.html" title="class in com.gpki.gpkiapi.cms">SignedData</A>
<DD>서명 되었던 원본 메시지를 획득한다. 
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html#getMessageImprint()"><B>getMessageImprint()</B></A> - 
Method in class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html" title="class in com.gpki.gpkiapi.tsa">TimeStampToken</A>
<DD>시점확인 토큰을 요청한 메시지의 해쉬값을 획득한다.
<DT><A HREF="com/gpki/gpkiapi/ocsp/OCSPRequest.html#getNonce()"><B>getNonce()</B></A> - 
Method in class com.gpki.gpkiapi.ocsp.<A HREF="com/gpki/gpkiapi/ocsp/OCSPRequest.html" title="class in com.gpki.gpkiapi.ocsp">OCSPRequest</A>
<DD>재사용 방지를 위해 OCSP 요청 메시지에 설정된 Nonce값을 획득한다.
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html#getNonce()"><B>getNonce()</B></A> - 
Method in class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html" title="class in com.gpki.gpkiapi.tsa">TimeStampToken</A>
<DD>시점확인 토큰 생성을 위해서 메시지 교환 시, 메시지의 재 사용 공격을 막기 위해서 사용된 랜덤값을 획득한다.
<DT><A HREF="com/gpki/gpkiapi/cert/X509Certificate.html#getNotAfter()"><B>getNotAfter()</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>
<DD>인증서 유효기간의 만료 일자를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/cert/X509Certificate.html#getNotBefore()"><B>getNotBefore()</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>
<DD>인증서 유효기간의 시작 일자를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/ocsp/OCSPResponse.html#getOcspSvrCert()"><B>getOcspSvrCert()</B></A> - 
Method in class com.gpki.gpkiapi.ocsp.<A HREF="com/gpki/gpkiapi/ocsp/OCSPResponse.html" title="class in com.gpki.gpkiapi.ocsp">OCSPResponse</A>
<DD>OCSP 서버의 인증서를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/cert/X509Certificate.html#getPemCert()"><B>getPemCert()</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>
<DD>PEM 형식의 인증서 데이터를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStampRes.html#getPkiFreeText()"><B>getPkiFreeText()</B></A> - 
Method in class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStampRes.html" title="class in com.gpki.gpkiapi.tsa">TimeStampRes</A>
<DD>시점확인 토큰 발급 결과가 성공이 아닌경우에 실패 원인을 확인한다.
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html#getPolicy()"><B>getPolicy()</B></A> - 
Method in class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html" title="class in com.gpki.gpkiapi.tsa">TimeStampToken</A>
<DD>시점확인 토큰의 생성 정책 OID를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/PrivateKey.html#getRandomForVID()"><B>getRandomForVID()</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>
<DD>개인키에 포함되어있는 본인확인을 위한 랜덤값을 획득한다.
<DT><A HREF="com/gpki/gpkiapi/cert/X509Certificate.html#getRemainDays()"><B>getRemainDays()</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>
<DD>인증서가 만료되기 까지의 남은 기간을 확인한다.
<DT><A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html#getSecretKey()"><B>getSecretKey()</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html" title="class in com.gpki.gpkiapi.cms">EnvelopedData</A>
<DD>암호화 메시지 생성/처리 후, 사용되었던 대칭키 정보를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html#getSecretKey()"><B>getSecretKey()</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html" title="class in com.gpki.gpkiapi.cms">SignedAndEnvelopedData</A>
<DD>서명 및 암호 메시지 생성/처리 후, 사용되었던 대칭키 정보를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/cms/WapEnvelopedData.html#getSecretKey()"><B>getSecretKey()</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/WapEnvelopedData.html" title="class in com.gpki.gpkiapi.cms">WapEnvelopedData</A>
<DD>암호 메시지 생성/처리 후, 사용되었던 대칭키 정보를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Algorithm.html#getSecretKeyAlg(java.lang.String)"><B>getSecretKeyAlg(String)</B></A> - 
Static method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Algorithm.html" title="class in com.gpki.gpkiapi.crypto">Algorithm</A>
<DD>대칭키 키 알고리즘의 코드값을 획득한다.
<DT><A HREF="com/gpki/gpkiapi/cert/X509Certificate.html#getSerialNumber()"><B>getSerialNumber()</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>
<DD>인증서의 일련번호를 획득한다. 
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html#getSerialNumber()"><B>getSerialNumber()</B></A> - 
Method in class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html" title="class in com.gpki.gpkiapi.tsa">TimeStampToken</A>
<DD>시점확인 서버에서 부여한 시점확인 토큰의 일련번호를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html#getSignerCert()"><B>getSignerCert()</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html" title="class in com.gpki.gpkiapi.cms">SignedAndEnvelopedData</A>
<DD>서명 및 암호화 메시지를 처리 한 후, 서명자의 인증서를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedContent.html#getSignerCert()"><B>getSignerCert()</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedContent.html" title="class in com.gpki.gpkiapi.cms">SignedContent</A>
<DD>서명자의 인증서를 획득한다. 
<DT><A HREF="com/gpki/gpkiapi/cms/SignedData.html#getSignerCert(int)"><B>getSignerCert(int)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedData.html" title="class in com.gpki.gpkiapi.cms">SignedData</A>
<DD>서명자의 인증서를 획득한다. 
<DT><A HREF="com/gpki/gpkiapi/cms/SignedData.html#getSignerCnt()"><B>getSignerCnt()</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedData.html" title="class in com.gpki.gpkiapi.cms">SignedData</A>
<DD>서명 메시지의 서명자 수를 획득한다. 
<DT><A HREF="com/gpki/gpkiapi/cms/SignedContent.html#getSigningTime()"><B>getSigningTime()</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedContent.html" title="class in com.gpki.gpkiapi.cms">SignedContent</A>
<DD>서명자의 서명 시간을 획득한다. 
<DT><A HREF="com/gpki/gpkiapi/cms/SignedData.html#getSigningTime(int)"><B>getSigningTime(int)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedData.html" title="class in com.gpki.gpkiapi.cms">SignedData</A>
<DD>해당 인덱스 서명자의 서명 시간을 획득한다. 
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStampRes.html#getStatus()"><B>getStatus()</B></A> - 
Method in class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStampRes.html" title="class in com.gpki.gpkiapi.tsa">TimeStampRes</A>
<DD>시점확인 토큰 발급 결과를 확인한다.
<DT><A HREF="com/gpki/gpkiapi/cert/X509Certificate.html#getSubjectDN()"><B>getSubjectDN()</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>
<DD>인증서의 소유자 이름(DN)을 획득한다. 
<DT><A HREF="com/gpki/gpkiapi/cert/X509Certificate.html#getSubjectPublicKeyInfo()"><B>getSubjectPublicKeyInfo()</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>
<DD>인증서의 공개키를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/cert/X509Certificate.html#getSubjectUID()"><B>getSubjectUID()</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>
<DD>인증서의 소유자 ID값을 획득한다.
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html#getTSACert()"><B>getTSACert()</B></A> - 
Method in class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html" title="class in com.gpki.gpkiapi.tsa">TimeStampToken</A>
<DD>시점확인 서비스를 제공한 서버의 인증서를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStampRes.html#getTimeStampToken()"><B>getTimeStampToken()</B></A> - 
Method in class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStampRes.html" title="class in com.gpki.gpkiapi.tsa">TimeStampRes</A>
<DD>시점확인 토큰을 획득한다.
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html#getTimeStampToken()"><B>getTimeStampToken()</B></A> - 
Method in class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html" title="class in com.gpki.gpkiapi.tsa">TimeStampToken</A>
<DD>시점확인 토큰을 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki"><B>gpkiapi_jni</B></A> - class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>.<DD><b>표준보안AP의 JAVA 버전</b> <br>
 <br>
 응용 어플리케이션에서 보안서비스를 제공하기 위해서 필요한 기능을 제공한다. <DT><A HREF="com/gpki/gpkiapi_jni.html#gpkiapi_jni()"><B>gpkiapi_jni()</B></A> - 
Constructor for class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>기본 생성자
</DL>
<HR>
<A NAME="_H_"><!-- --></A><H2>
<B>H</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi_jni.html#HASH_ALG_HAS160"><B>HASH_ALG_HAS160</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>HAS160 알고리즘을 이용한 메시지 다이제스트 생성.
<DT><A HREF="com/gpki/gpkiapi_jni.html#HASH_ALG_MD5"><B>HASH_ALG_MD5</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>MD5 알고리즘을 이용한 메시지 다이제스트 생성.
<DT><A HREF="com/gpki/gpkiapi_jni.html#HASH_ALG_SHA1"><B>HASH_ALG_SHA1</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>SHA1 알고리즘을 이용한 메시지 다이제스트 생성.
<DT><A HREF="com/gpki/gpkiapi_jni.html#HASH_ALG_SHA256"><B>HASH_ALG_SHA256</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>SHA256 알고리즘을 이용한 메시지 다이제스트 생성.
</DL>
<HR>
<A NAME="_I_"><!-- --></A><H2>
<B>I</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi/ivs/IdentifyUser.html" title="class in com.gpki.gpkiapi.ivs"><B>IdentifyUser</B></A> - class com.gpki.gpkiapi.ivs.<A HREF="com/gpki/gpkiapi/ivs/IdentifyUser.html" title="class in com.gpki.gpkiapi.ivs">IdentifyUser</A>.<DD>통합검증 서버를 통하여 본인확인을 수행한다.<DT><A HREF="com/gpki/gpkiapi/ivs/IdentifyUser.html#IdentifyUser(java.lang.String)"><B>IdentifyUser(String)</B></A> - 
Constructor for class com.gpki.gpkiapi.ivs.<A HREF="com/gpki/gpkiapi/ivs/IdentifyUser.html" title="class in com.gpki.gpkiapi.ivs">IdentifyUser</A>
<DD>본인확인을 위한 IdentifyUser 객체를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/ivs/IdentifyUser.html#identify(java.lang.String, byte[], com.gpki.gpkiapi.cert.X509Certificate)"><B>identify(String, byte[], X509Certificate)</B></A> - 
Method in class com.gpki.gpkiapi.ivs.<A HREF="com/gpki/gpkiapi/ivs/IdentifyUser.html" title="class in com.gpki.gpkiapi.ivs">IdentifyUser</A>
<DD>본인확인을 요청한다.
<DT><A HREF="com/gpki/gpkiapi/GpkiApi.html#init(java.lang.String)"><B>init(String)</B></A> - 
Static method in class com.gpki.gpkiapi.<A HREF="com/gpki/gpkiapi/GpkiApi.html" title="class in com.gpki.gpkiapi">GpkiApi</A>
<DD>API 사용을 위해서는 해당 함수를 호출하여 반드시 초기화 하여야 한다.
 
<DT><A HREF="com/gpki/gpkiapi/crypto/Cipher.html#init(int, com.gpki.gpkiapi.crypto.Key)"><B>init(int, Key)</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Cipher.html" title="class in com.gpki.gpkiapi.crypto">Cipher</A>
<DD>연산 종류와 사용될 키를 이용하여 객체를 초기화한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Mac.html#init(java.lang.String)"><B>init(String)</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Mac.html" title="class in com.gpki.gpkiapi.crypto">Mac</A>
<DD>사용될 키를 이용하여 객체를 초기화한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Signature.html#initSign(com.gpki.gpkiapi.crypto.PrivateKey, java.lang.String)"><B>initSign(PrivateKey, String)</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Signature.html" title="class in com.gpki.gpkiapi.crypto">Signature</A>
<DD>메시지 서명값을 생성하기 위해서 개인키와 해쉬알고리즘으로 초기화한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Signature.html#initSign(com.gpki.gpkiapi.crypto.PrivateKey, com.gpki.gpkiapi.crypto.PublicKey, java.lang.String)"><B>initSign(PrivateKey, PublicKey, String)</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Signature.html" title="class in com.gpki.gpkiapi.crypto">Signature</A>
<DD>메시지 서명값을 생성하기 위해서 개인키, 공개키, 해쉬알고리즘으로 초기화한다<br>
 KCDSA 서명과 같이 서명값 생성 시, 개인키와 공개키가 모두 필요한 알고리즘 사용시 사용한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Signature.html#initVerify(com.gpki.gpkiapi.crypto.PublicKey, java.lang.String)"><B>initVerify(PublicKey, String)</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Signature.html" title="class in com.gpki.gpkiapi.crypto">Signature</A>
<DD>메시지 서명값을 검증하기 위해서 공개키와 해쉬알고리즘으로 초기화 한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Algorithm.html#isSame(java.lang.String, int)"><B>isSame(String, int)</B></A> - 
Static method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Algorithm.html" title="class in com.gpki.gpkiapi.crypto">Algorithm</A>
<DD>문자열로 입력된 키 알고리즘과 암호 연산 알고리즘 코드가 같은 알고리즘인지 확인한다.
</DL>
<HR>
<A NAME="_K_"><!-- --></A><H2>
<B>K</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi_jni.html#KEY_TYPE_PRIVATE"><B>KEY_TYPE_PRIVATE</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>개인키를 이용하여 데이터를 암/복호화할 경우 사용
<DT><A HREF="com/gpki/gpkiapi_jni.html#KEY_TYPE_PUBLIC"><B>KEY_TYPE_PUBLIC</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서의 공개키를 이용하여 데이터를 암/복호화할 경우 사용
<DT><A HREF="com/gpki/gpkiapi/crypto/Key.html" title="interface in com.gpki.gpkiapi.crypto"><B>Key</B></A> - interface com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Key.html" title="interface in com.gpki.gpkiapi.crypto">Key</A>.<DD>키를 다루기 위한 인터페이스<DT><A HREF="com/gpki/gpkiapi/crypto/KeyGenerator.html" title="class in com.gpki.gpkiapi.crypto"><B>KeyGenerator</B></A> - class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/KeyGenerator.html" title="class in com.gpki.gpkiapi.crypto">KeyGenerator</A>.<DD>대칭키 연산을 위한 대칭키(Key,IV)를 생성한다.<DT><A HREF="com/gpki/gpkiapi/crypto/KeyGenerator.html#KeyGenerator()"><B>KeyGenerator()</B></A> - 
Constructor for class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/KeyGenerator.html" title="class in com.gpki.gpkiapi.crypto">KeyGenerator</A>
<DD>&nbsp;
</DL>
<HR>
<A NAME="_L_"><!-- --></A><H2>
<B>L</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi_jni.html#LDAP_DATA_ARL"><B>LDAP_DATA_ARL</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>LDAP에 게시되어있는 인증기관용 폐지목록 리스트 획득
<DT><A HREF="com/gpki/gpkiapi_jni.html#LDAP_DATA_CA_CERT"><B>LDAP_DATA_CA_CERT</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>LDAP에 게시되어있는 인증기관용 인증서 획득
<DT><A HREF="com/gpki/gpkiapi_jni.html#LDAP_DATA_CRL"><B>LDAP_DATA_CRL</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>LDAP에 게시되어있는 사용자용 폐지목록 리스트 획득
<DT><A HREF="com/gpki/gpkiapi_jni.html#LDAP_DATA_CTL"><B>LDAP_DATA_CTL</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>LDAP에 게시되어있는 인증서 신뢰 목록 리스트 획득
<DT><A HREF="com/gpki/gpkiapi_jni.html#LDAP_DATA_DELTA_CRL"><B>LDAP_DATA_DELTA_CRL</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>LDAP에 게시되어있는 사용자용 델타 폐지목록 리스트 획득
<DT><A HREF="com/gpki/gpkiapi_jni.html#LDAP_DATA_GPKI_WCERT"><B>LDAP_DATA_GPKI_WCERT</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>LDAP에 게시되어있는 무선 행정인증체계의 인증서 획득
<DT><A HREF="com/gpki/gpkiapi_jni.html#LDAP_DATA_KM_CERT"><B>LDAP_DATA_KM_CERT</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>LDAP에 게시되어있는 키분배용용 인증서 획득
<DT><A HREF="com/gpki/gpkiapi_jni.html#LDAP_DATA_SIGN_CERT"><B>LDAP_DATA_SIGN_CERT</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>LDAP에 게시되어있는 서명용 인증서 획득
<DT><A HREF="com/gpki/gpkiapi_jni.html#LDAP_GetAnyDataByURL(java.lang.String, java.lang.String)"><B>LDAP_GetAnyDataByURL(String, String)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>LDAP 디렉토리에 게시되어있는 데이터를 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#LDAP_GetCRLByCert(byte[])"><B>LDAP_GetCRLByCert(byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서의 확장필드에 있는 인증서 폐지목록 리스트 배포 위치를 이용하여 인증서 폐지목록 리스트를 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#LDAP_GetCertPath(byte[], java.lang.String)"><B>LDAP_GetCertPath(byte[], String)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>환경파일 정보를 이용하여 인증서의 경로를 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#LDAP_GetDataByURL(int, java.lang.String)"><B>LDAP_GetDataByURL(int, String)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>LDAP 디렉토리에 게시되어있는 데이터를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/util/Ldap.html" title="class in com.gpki.gpkiapi.util"><B>Ldap</B></A> - class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Ldap.html" title="class in com.gpki.gpkiapi.util">Ldap</A>.<DD>LDAP 디렉토리에 접근하여 데이터를 획득한다. <DT><A HREF="com/gpki/gpkiapi/util/Ldap.html#Ldap()"><B>Ldap()</B></A> - 
Constructor for class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Ldap.html" title="class in com.gpki.gpkiapi.util">Ldap</A>
<DD>&nbsp;
<DT><A HREF="com/gpki/gpkiapi/util/Dump.html#logFilePathName"><B>logFilePathName</B></A> - 
Static variable in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Dump.html" title="class in com.gpki.gpkiapi.util">Dump</A>
<DD>Dump 파일명 (기본값 : "dump.log")
</DL>
<HR>
<A NAME="_M_"><!-- --></A><H2>
<B>M</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi_jni.html#MAC_ALG_MD5_HMAC"><B>MAC_ALG_MD5_HMAC</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>MD5 HMAC을 이용한 맥값 생성/검증
<DT><A HREF="com/gpki/gpkiapi_jni.html#MAC_ALG_SHA1_HMAC"><B>MAC_ALG_SHA1_HMAC</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>SHA1 HMAC을 이용한 맥값 생성/검증
<DT><A HREF="com/gpki/gpkiapi_jni.html#MEDIA_TYPE_DYNAMIC"><B>MEDIA_TYPE_DYNAMIC</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>동적 라이브러리를 이용하여 저장매체(스마트카드)하는 경우 이용
<DT><A HREF="com/gpki/gpkiapi_jni.html#MEDIA_TYPE_FILE_PATH"><B>MEDIA_TYPE_FILE_PATH</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>하드 디스크, 플로피 디스크, USB 드라이브등과 같이 파일 경로를 통해서 데이터를 획득할 수 있는 저장매체를 이용
<DT><A HREF="com/gpki/gpkiapi/crypto/Mac.html" title="class in com.gpki.gpkiapi.crypto"><B>Mac</B></A> - class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Mac.html" title="class in com.gpki.gpkiapi.crypto">Mac</A>.<DD>메시지 인증코드(MAC)를 생성/검증한다.<DT><A HREF="com/gpki/gpkiapi/crypto/Mac.html#Mac()"><B>Mac()</B></A> - 
Constructor for class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Mac.html" title="class in com.gpki.gpkiapi.crypto">Mac</A>
<DD>&nbsp;
<DT><A HREF="com/gpki/gpkiapi/crypto/MessageDigest.html" title="class in com.gpki.gpkiapi.crypto"><B>MessageDigest</B></A> - class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/MessageDigest.html" title="class in com.gpki.gpkiapi.crypto">MessageDigest</A>.<DD>메시지 다이제스트(해쉬값)를 생성한다.<DT><A HREF="com/gpki/gpkiapi/crypto/MessageDigest.html#MessageDigest()"><B>MessageDigest()</B></A> - 
Constructor for class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/MessageDigest.html" title="class in com.gpki.gpkiapi.crypto">MessageDigest</A>
<DD>메시지 다이제스트 생성을 위한 MessageDigest 객체를 생성한다.
</DL>
<HR>
<A NAME="_N_"><!-- --></A><H2>
<B>N</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi_jni.html#nReturnInt"><B>nReturnInt</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>함수의 output이 int 형인 경우, 해당 output이 저장됨
<DT><A HREF="com/gpki/gpkiapi_jni.html#nSignerCnt"><B>nSignerCnt</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>유선용 서명 메시지에 포함되어있는 복수의 서명자 인증서의 갯수를 저장
<DT><A HREF="com/gpki/gpkiapi_jni.html#nSymAlg"><B>nSymAlg</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>함수에서 사용하는 대칭키 알고리즘 정보
</DL>
<HR>
<A NAME="_O_"><!-- --></A><H2>
<B>O</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi/ocsp/OCSPRequest.html" title="class in com.gpki.gpkiapi.ocsp"><B>OCSPRequest</B></A> - class com.gpki.gpkiapi.ocsp.<A HREF="com/gpki/gpkiapi/ocsp/OCSPRequest.html" title="class in com.gpki.gpkiapi.ocsp">OCSPRequest</A>.<DD>인증서의 상태 확인을 위한 OCSP 요청 메시지를 생성한다.<DT><A HREF="com/gpki/gpkiapi/ocsp/OCSPRequest.html#OCSPRequest()"><B>OCSPRequest()</B></A> - 
Constructor for class com.gpki.gpkiapi.ocsp.<A HREF="com/gpki/gpkiapi/ocsp/OCSPRequest.html" title="class in com.gpki.gpkiapi.ocsp">OCSPRequest</A>
<DD>객체 OCSPRequest를 초기화 한다.
<DT><A HREF="com/gpki/gpkiapi/ocsp/OCSPResponse.html" title="class in com.gpki.gpkiapi.ocsp"><B>OCSPResponse</B></A> - class com.gpki.gpkiapi.ocsp.<A HREF="com/gpki/gpkiapi/ocsp/OCSPResponse.html" title="class in com.gpki.gpkiapi.ocsp">OCSPResponse</A>.<DD>OCSP 서버로 부터 받은 메시지를 처리하여 인증서의 상태를 확인한다.<DT><A HREF="com/gpki/gpkiapi/ocsp/OCSPResponse.html#OCSPResponse(byte[], com.gpki.gpkiapi.ocsp.OCSPRequest)"><B>OCSPResponse(byte[], OCSPRequest)</B></A> - 
Constructor for class com.gpki.gpkiapi.ocsp.<A HREF="com/gpki/gpkiapi/ocsp/OCSPResponse.html" title="class in com.gpki.gpkiapi.ocsp">OCSPResponse</A>
<DD>응답 메시지와 요청 정보를 설정하고 OCSPResponse 객체를 생성한다.
</DL>
<HR>
<A NAME="_P_"><!-- --></A><H2>
<B>P</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi_jni.html#PRIKEY_ChangePasswd(java.lang.String, java.lang.String, byte[])"><B>PRIKEY_ChangePasswd(String, String, byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>암호화되어있는 개인키의 비밀번호를 변경한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#PRIKEY_CheckKeyPair(byte[], byte[])"><B>PRIKEY_CheckKeyPair(byte[], byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>인증서의 공개키와 개인키의 키쌍을 체크한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#PRIKEY_Decrypt(java.lang.String, byte[])"><B>PRIKEY_Decrypt(String, byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>개인키를 비밀번호를 이용하여 복호화한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#PRIKEY_Encrypt(int, java.lang.String, byte[])"><B>PRIKEY_Encrypt(int, String, byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>개인키를 비밀번호를 이용하여 암호화한다. 
<DT><A HREF="com/gpki/gpkiapi/util/Pem.html" title="class in com.gpki.gpkiapi.util"><B>Pem</B></A> - class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Pem.html" title="class in com.gpki.gpkiapi.util">Pem</A>.<DD>PEM 인코딩/디코딩을 수행한다.<DT><A HREF="com/gpki/gpkiapi/util/Pem.html#Pem()"><B>Pem()</B></A> - 
Constructor for class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Pem.html" title="class in com.gpki.gpkiapi.util">Pem</A>
<DD>PEM 인코딩/디코딩을 위한 Pem 객체 초기화
<DT><A HREF="com/gpki/gpkiapi/pkcs/Pkcs5.html" title="class in com.gpki.gpkiapi.pkcs"><B>Pkcs5</B></A> - class com.gpki.gpkiapi.pkcs.<A HREF="com/gpki/gpkiapi/pkcs/Pkcs5.html" title="class in com.gpki.gpkiapi.pkcs">Pkcs5</A>.<DD>비밀번호를 이용하여 개인키를 암/복호화<DT><A HREF="com/gpki/gpkiapi/pkcs/Pkcs5.html#Pkcs5()"><B>Pkcs5()</B></A> - 
Constructor for class com.gpki.gpkiapi.pkcs.<A HREF="com/gpki/gpkiapi/pkcs/Pkcs5.html" title="class in com.gpki.gpkiapi.pkcs">Pkcs5</A>
<DD>개인키 암/복호화를 위한 Pkcs5 객체를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto"><B>PrivateKey</B></A> - class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>.<DD>비 대칭키 알고리즘을 위한 개인키를 다룬다.<DT><A HREF="com/gpki/gpkiapi/crypto/PrivateKey.html#PrivateKey(byte[])"><B>PrivateKey(byte[])</B></A> - 
Constructor for class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>
<DD>개인키 정보를 입력하여 PrivateKey 객체를 초기화한다. 
<DT><A HREF="com/gpki/gpkiapi/crypto/PublicKey.html" title="class in com.gpki.gpkiapi.crypto"><B>PublicKey</B></A> - class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/PublicKey.html" title="class in com.gpki.gpkiapi.crypto">PublicKey</A>.<DD>비 대칭키 알고리즘을 위한 공개키를 다룬다.<DT><A HREF="com/gpki/gpkiapi/crypto/PublicKey.html#PublicKey(byte[])"><B>PublicKey(byte[])</B></A> - 
Constructor for class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/PublicKey.html" title="class in com.gpki.gpkiapi.crypto">PublicKey</A>
<DD>공개키 입력하여 PublicKey 객체를 초기화한다. 
<DT><A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html#process(byte[], com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)"><B>process(byte[], X509Certificate, PrivateKey)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html" title="class in com.gpki.gpkiapi.cms">EnvelopedData</A>
<DD>암호화된 메시지를 복호화하여 원본 메시지를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html#process(byte[])"><B>process(byte[])</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html" title="class in com.gpki.gpkiapi.cms">SignedAndEnvelopedData</A>
<DD>서명 및 암호 메시지를 처리한다. 
<DT><A HREF="com/gpki/gpkiapi/cms/WapEnvelopedData.html#process(byte[])"><B>process(byte[])</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/WapEnvelopedData.html" title="class in com.gpki.gpkiapi.cms">WapEnvelopedData</A>
<DD>암호 메시지를 복호화한다. 
<DT><A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html#process_File(java.lang.String, com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey, java.lang.String)"><B>process_File(String, X509Certificate, PrivateKey, String)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html" title="class in com.gpki.gpkiapi.cms">EnvelopedData</A>
<DD><b>Deprecated.
<DT><A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html#process_File2(java.lang.String, com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey, java.lang.String)"><B>process_File2(String, X509Certificate, PrivateKey, String)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html" title="class in com.gpki.gpkiapi.cms">EnvelopedData</A>
<DD>파일 형태의 암호화된 메시지를 복호화하여 원본 메시지를 파일로 저장한다.
<DT><A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html#process_noContent_File(java.lang.String, java.lang.String, com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey, java.lang.String)"><B>process_noContent_File(String, String, X509Certificate, PrivateKey, String)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/EnvelopedData.html" title="class in com.gpki.gpkiapi.cms">EnvelopedData</A>
<DD>파일 형태의 암호화된 메시지를 복호화하여 원본 메시지를 파일로 저장한다.
</DL>
<HR>
<A NAME="_R_"><!-- --></A><H2>
<B>R</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#REVOKE_CHECK_ALL"><B>REVOKE_CHECK_ALL</B></A> - 
Static variable in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>폐지 여부 확인을 인증기관 인증서는 ARL을 이용하여, 가입자 인증서는 OCSP를 이용하고 실패하면 CRL을 이용함
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#REVOKE_CHECK_ARL"><B>REVOKE_CHECK_ARL</B></A> - 
Static variable in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>인증기관 인증서의 폐지 여부 확인을 ARL을 이용하여 수행함
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#REVOKE_CHECK_CRL"><B>REVOKE_CHECK_CRL</B></A> - 
Static variable in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>가입자 인증서의 폐지 여부 확인을 CRL을 이용하여 수행함
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#REVOKE_CHECK_NONE"><B>REVOKE_CHECK_NONE</B></A> - 
Static variable in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>인증서 폐지여부 확인을 하지 않음
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#REVOKE_CHECK_OCSP"><B>REVOKE_CHECK_OCSP</B></A> - 
Static variable in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>가입자 인증서의 폐지 여부 확인을 OCSP를 이용하여 수행함
 (CRL도 함께 지정하면 OCSP를 이용하여 먼저 수행 한 후, 실패하면 CRL을 이용함)
<DT><A HREF="com/gpki/gpkiapi/crypto/Random.html" title="class in com.gpki.gpkiapi.crypto"><B>Random</B></A> - class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Random.html" title="class in com.gpki.gpkiapi.crypto">Random</A>.<DD>원하는 길이의 랜덤값을 생성한다.<DT><A HREF="com/gpki/gpkiapi/crypto/Random.html#Random()"><B>Random()</B></A> - 
Constructor for class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Random.html" title="class in com.gpki.gpkiapi.crypto">Random</A>
<DD>랜덤값 생성을 위한 Random 객체를 초기화한다.
<DT><A HREF="com/gpki/gpkiapi/storage/Disk.html#read(java.lang.String)"><B>read(String)</B></A> - 
Static method in class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/Disk.html" title="class in com.gpki.gpkiapi.storage">Disk</A>
<DD>지정한 경로의 파일을 읽어들인다.
<DT><A HREF="com/gpki/gpkiapi/storage/Disk.html#readCert(java.lang.String)"><B>readCert(String)</B></A> - 
Static method in class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/Disk.html" title="class in com.gpki.gpkiapi.storage">Disk</A>
<DD>지정한 경로의 인증서를 읽어들인다.
<DT><A HREF="com/gpki/gpkiapi/storage/SmartCard.html#readCert(int, java.lang.String)"><B>readCert(int, String)</B></A> - 
Method in class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/SmartCard.html" title="class in com.gpki.gpkiapi.storage">SmartCard</A>
<DD>지정한 종류의 인증서를 읽어들인다.
<DT><A HREF="com/gpki/gpkiapi/storage/Disk.html#readPriKey(java.lang.String, java.lang.String)"><B>readPriKey(String, String)</B></A> - 
Static method in class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/Disk.html" title="class in com.gpki.gpkiapi.storage">Disk</A>
<DD>지정한 경로의 개인키를 읽어들인다. 
<DT><A HREF="com/gpki/gpkiapi/storage/SmartCard.html#readPriKey(int, java.lang.String, java.lang.String)"><B>readPriKey(int, String, String)</B></A> - 
Method in class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/SmartCard.html" title="class in com.gpki.gpkiapi.storage">SmartCard</A>
<DD>지정한 종류의 개인키를 읽어들인다.
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStamp.html#reqTimeStampToken(java.lang.String, int)"><B>reqTimeStampToken(String, int)</B></A> - 
Method in class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStamp.html" title="class in com.gpki.gpkiapi.tsa">TimeStamp</A>
<DD>시점 확인 토큰을 요청한다.
</DL>
<HR>
<A NAME="_S_"><!-- --></A><H2>
<B>S</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi_jni.html#SIGEA_MakeChallenge()"><B>SIGEA_MakeChallenge()</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>&nbsp;
<DT><A HREF="com/gpki/gpkiapi_jni.html#SIGEA_MakeResponse(byte[], byte[], byte[])"><B>SIGEA_MakeResponse(byte[], byte[], byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>&nbsp;
<DT><A HREF="com/gpki/gpkiapi_jni.html#SIGEA_VerifyResponse(byte[], byte[])"><B>SIGEA_VerifyResponse(byte[], byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>&nbsp;
<DT><A HREF="com/gpki/gpkiapi_jni.html#STORAGE_DeleteCert(int, java.lang.String, int)"><B>STORAGE_DeleteCert(int, String, int)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>저장매체에 있는 인증서를 삭제한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#STORAGE_DeletePriKey(int, java.lang.String, java.lang.String, int)"><B>STORAGE_DeletePriKey(int, String, String, int)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>저장매체에 있는 개인키를 삭제한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#STORAGE_ReadCert(int, java.lang.String, int)"><B>STORAGE_ReadCert(int, String, int)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>저장매체로부터 인증서를 읽어 들인다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#STORAGE_ReadFile(java.lang.String)"><B>STORAGE_ReadFile(String)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>하드디스크의 저장되어있는 특정 파일을 읽는다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#STORAGE_ReadPriKey(int, java.lang.String, java.lang.String, int)"><B>STORAGE_ReadPriKey(int, String, String, int)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>저장매체로부터 개인키를 읽어 들인다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#STORAGE_SetLibraryPath(java.lang.String)"><B>STORAGE_SetLibraryPath(String)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>&nbsp;
<DT><A HREF="com/gpki/gpkiapi_jni.html#STORAGE_WriteCert(int, java.lang.String, int, byte[])"><B>STORAGE_WriteCert(int, String, int, byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>저장매체에 인증서를 저장한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#STORAGE_WriteFile(java.lang.String, byte[])"><B>STORAGE_WriteFile(String, byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>하드디스크의 특정위치에 데이터를 저장한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#STORAGE_WritePriKey(int, java.lang.String, java.lang.String, int, int, byte[])"><B>STORAGE_WritePriKey(int, String, String, int, int, byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>저장매체에 개인키를 저장한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#SYM_ALG_3DES_CBC"><B>SYM_ALG_3DES_CBC</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>3DES 알고리즘을 이용한 대칭키 암/복호화
<DT><A HREF="com/gpki/gpkiapi_jni.html#SYM_ALG_ARIA_CBC"><B>SYM_ALG_ARIA_CBC</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>ARIA 알고리즘을 이용한 대칭키 암/복호화
<DT><A HREF="com/gpki/gpkiapi_jni.html#SYM_ALG_DES_CBC"><B>SYM_ALG_DES_CBC</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>DES 알고리즘을 이용한 대칭키 암/복호화
<DT><A HREF="com/gpki/gpkiapi_jni.html#SYM_ALG_NEAT_CBC"><B>SYM_ALG_NEAT_CBC</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>NEAT 알고리즘을 이용한 대칭키 암/복호화
<DT><A HREF="com/gpki/gpkiapi_jni.html#SYM_ALG_NES_CBC"><B>SYM_ALG_NES_CBC</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>NES 알고리즘을 이용한 대칭키 암/복호화
<DT><A HREF="com/gpki/gpkiapi_jni.html#SYM_ALG_SEED_CBC"><B>SYM_ALG_SEED_CBC</B></A> - 
Static variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>SEED 알고리즘을 이용한 대칭키 암/복호화
<DT><A HREF="com/gpki/gpkiapi/crypto/SecretKey.html" title="class in com.gpki.gpkiapi.crypto"><B>SecretKey</B></A> - class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/SecretKey.html" title="class in com.gpki.gpkiapi.crypto">SecretKey</A>.<DD>대칭키 알고리즘을 위한 키를 다룬다.<DT><A HREF="com/gpki/gpkiapi/crypto/SecretKey.html#SecretKey(java.lang.String, byte[], byte[])"><B>SecretKey(String, byte[], byte[])</B></A> - 
Constructor for class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/SecretKey.html" title="class in com.gpki.gpkiapi.crypto">SecretKey</A>
<DD>key와 iv를 지정하여 SecretKey 객체를 초기화 한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Signature.html" title="class in com.gpki.gpkiapi.crypto"><B>Signature</B></A> - class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Signature.html" title="class in com.gpki.gpkiapi.crypto">Signature</A>.<DD>메시지의 서명값을 생성하고 검증한다.<DT><A HREF="com/gpki/gpkiapi/crypto/Signature.html#Signature()"><B>Signature()</B></A> - 
Constructor for class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Signature.html" title="class in com.gpki.gpkiapi.crypto">Signature</A>
<DD>서명값 생성/검증을 위한 Signature 객체를 초기화한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html" title="class in com.gpki.gpkiapi.cms"><B>SignedAndEnvelopedData</B></A> - class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html" title="class in com.gpki.gpkiapi.cms">SignedAndEnvelopedData</A>.<DD>유선 환경에서 메시지의 인증, 무결성, 기밀성을 보장하기 위해서 서명 및 암호 메시지(PKCS#)7를 생성/처리한다.<DT><A HREF="com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html#SignedAndEnvelopedData()"><B>SignedAndEnvelopedData()</B></A> - 
Constructor for class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html" title="class in com.gpki.gpkiapi.cms">SignedAndEnvelopedData</A>
<DD>서명 및 암호 메시지 생성/처리를 위한 SignedAndEnvelopedData 객체를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html#SignedAndEnvelopedData(java.lang.String)"><B>SignedAndEnvelopedData(String)</B></A> - 
Constructor for class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html" title="class in com.gpki.gpkiapi.cms">SignedAndEnvelopedData</A>
<DD>사용할 대칭키 알고리즘을 설정하여 SignedAndEnvelopedData 객체를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedContent.html" title="class in com.gpki.gpkiapi.cms"><B>SignedContent</B></A> - class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedContent.html" title="class in com.gpki.gpkiapi.cms">SignedContent</A>.<DD>무선 환경에서의 서명 메시지를 생성/처리한다.<DT><A HREF="com/gpki/gpkiapi/cms/SignedContent.html#SignedContent()"><B>SignedContent()</B></A> - 
Constructor for class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedContent.html" title="class in com.gpki.gpkiapi.cms">SignedContent</A>
<DD>서명 메시지 생성/처리를 위한 SignedContent의 객체를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedData.html" title="class in com.gpki.gpkiapi.cms"><B>SignedData</B></A> - class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedData.html" title="class in com.gpki.gpkiapi.cms">SignedData</A>.<DD>유선 환경에서의 서명 메시지를 생성/처리한다.<DT><A HREF="com/gpki/gpkiapi/cms/SignedData.html#SignedData()"><B>SignedData()</B></A> - 
Constructor for class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedData.html" title="class in com.gpki.gpkiapi.cms">SignedData</A>
<DD>서명 메시지 생성/처리를 위한 SignedData 객체를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/storage/SmartCard.html" title="class in com.gpki.gpkiapi.storage"><B>SmartCard</B></A> - class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/SmartCard.html" title="class in com.gpki.gpkiapi.storage">SmartCard</A>.<DD>스마트카드에서 개인키와 인증서를 읽기/저장/삭제 한다.<DT><A HREF="com/gpki/gpkiapi/storage/SmartCard.html#SmartCard(java.lang.String)"><B>SmartCard(String)</B></A> - 
Constructor for class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/SmartCard.html" title="class in com.gpki.gpkiapi.storage">SmartCard</A>
<DD>스마트 카드를 지원하는 동적 라이브러리의 위치를 지정하여 SmartCard 객체를 초기화한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#sDetailErrorString"><B>sDetailErrorString</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>함수 사용 시, 에러가 발생하였을 경우 gpkiapi 동적 라이브러리에서 제공하는 에러 정보를 확인함
<DT><A HREF="com/gpki/gpkiapi_jni.html#sLibPath"><B>sLibPath</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>스마트 카드의 동적 라이브러리 경로
<DT><A HREF="com/gpki/gpkiapi_jni.html#sReturnString"><B>sReturnString</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>함수의 output이 String 형인 경우, 해당 output이 저장됨 <br>
 함수 사용 시, 에러가 발생하였을 경우 에러 코드에 대한 에러 정보가 저장됨 <br>
<DT><A HREF="com/gpki/gpkiapi_jni.html#sSignTime"><B>sSignTime</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>서명 메시지의 서명 시간이 저장됨
<DT><A HREF="com/gpki/gpkiapi_jni.html#sSignTimeArray"><B>sSignTimeArray</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>유선용 서명 메시지에 포함되어있는 복수의 서명에 대한 서명 시간 저장
<DT><A HREF="com/gpki/gpkiapi_jni.html#sTCN"><B>sTCN</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>시점확인 토큰을 발행한 서버 DN의 CN값
<DT><A HREF="com/gpki/gpkiapi_jni.html#sTDN"><B>sTDN</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>시점확인 토큰을 발행한 서버 DN값
<DT><A HREF="com/gpki/gpkiapi_jni.html#sTGenTime"><B>sTGenTime</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>시점확인 토큰의 생성시간
<DT><A HREF="com/gpki/gpkiapi_jni.html#sTHashAlg"><B>sTHashAlg</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>시점확인을 요청한 문서의 메시지 다이제스트 생성 알고리즘
<DT><A HREF="com/gpki/gpkiapi_jni.html#sTHashValue"><B>sTHashValue</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>시점확인을 요청한 문서의 메시지 다이제스트
<DT><A HREF="com/gpki/gpkiapi_jni.html#sTNonce"><B>sTNonce</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>시점확인 요청의 중간 공격을 막기위한 난수값
<DT><A HREF="com/gpki/gpkiapi_jni.html#sTPolicy"><B>sTPolicy</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>시점확인 토큰을 발행시 적용된 정책 식별자
<DT><A HREF="com/gpki/gpkiapi_jni.html#sTSerialNum"><B>sTSerialNum</B></A> - 
Variable in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>시점확인 서버가 부여한 토큰 일련번호
<DT><A HREF="com/gpki/gpkiapi/util/Ldap.html#searchCN(int, java.lang.String)"><B>searchCN(int, String)</B></A> - 
Method in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Ldap.html" title="class in com.gpki.gpkiapi.util">Ldap</A>
<DD>LDAP 디렉토리에서 해당 CN값을 갖는 엔트리의 DN값과 게시되어있는 데이터를 획득한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/SecretKey.html#setChangedKeyAndIV(byte[], byte[])"><B>setChangedKeyAndIV(byte[], byte[])</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/SecretKey.html" title="class in com.gpki.gpkiapi.crypto">SecretKey</A>
<DD>&nbsp;
<DT><A HREF="com/gpki/gpkiapi/crypto/SecretKey.html#setKeyAndIv(byte[], byte[])"><B>setKeyAndIv(byte[], byte[])</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/SecretKey.html" title="class in com.gpki.gpkiapi.crypto">SecretKey</A>
<DD>대칭키 암/복호화를 위해 사용할 키와 초기벡터를 설정한다.
<DT><A HREF="com/gpki/gpkiapi/util/Ldap.html#setLdap(java.lang.String, int)"><B>setLdap(String, int)</B></A> - 
Method in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Ldap.html" title="class in com.gpki.gpkiapi.util">Ldap</A>
<DD>검색할 LDAP 디렉토리 IP와 Port를 설정한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedData.html#setMessage(byte[])"><B>setMessage(byte[])</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedData.html" title="class in com.gpki.gpkiapi.cms">SignedData</A>
<DD>서명할 메시지를 설정한다.
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStamp.html#setMessage(byte[])"><B>setMessage(byte[])</B></A> - 
Method in class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStamp.html" title="class in com.gpki.gpkiapi.tsa">TimeStamp</A>
<DD>시점확인을 받고자 하는 문서/메시지를 설정한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedData.html#setMessage_File(java.lang.String)"><B>setMessage_File(String)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedData.html" title="class in com.gpki.gpkiapi.cms">SignedData</A>
<DD>서명할 메시지 파일 위치를 설정한다.
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#setMyCert(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)"><B>setMyCert(X509Certificate, PrivateKey)</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>OCSP를 이용한 인증서 폐지여부 확인 시, 요청 메시지에 서명하고자 할 경우 
 인증서 검증을 요청하는 사용자의 인증서와 개인키를 지정한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html#setMyCert(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)"><B>setMyCert(X509Certificate, PrivateKey)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html" title="class in com.gpki.gpkiapi.cms">SignedAndEnvelopedData</A>
<DD>사용자의 인증서를 설정한다.
<DT><A HREF="com/gpki/gpkiapi/cms/WapEnvelopedData.html#setMyCert(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)"><B>setMyCert(X509Certificate, PrivateKey)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/WapEnvelopedData.html" title="class in com.gpki.gpkiapi.cms">WapEnvelopedData</A>
<DD>암호 메시지를 처리하기 위해서 사용될 사용자의 암호화용 인증서와 개인키를 설정한다.
<DT><A HREF="com/gpki/gpkiapi/ivs/IdentifyUser.html#setMyCert(com.gpki.gpkiapi.cert.X509Certificate)"><B>setMyCert(X509Certificate)</B></A> - 
Method in class com.gpki.gpkiapi.ivs.<A HREF="com/gpki/gpkiapi/ivs/IdentifyUser.html" title="class in com.gpki.gpkiapi.ivs">IdentifyUser</A>
<DD>통합검증서버에 본인확인을 요청하기 위해서는 요청하는 사람의 인증서를 설정한다.
<DT><A HREF="com/gpki/gpkiapi/ivs/VerifyCert.html#setMyCert(com.gpki.gpkiapi.cert.X509Certificate)"><B>setMyCert(X509Certificate)</B></A> - 
Method in class com.gpki.gpkiapi.ivs.<A HREF="com/gpki/gpkiapi/ivs/VerifyCert.html" title="class in com.gpki.gpkiapi.ivs">VerifyCert</A>
<DD>통합검증서버에 인증서 검증을 요청하기 위해서는 요청하는 사람의 인증서를 설정한다.
 
<DT><A HREF="com/gpki/gpkiapi/ocsp/OCSPRequest.html#setMyCert(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)"><B>setMyCert(X509Certificate, PrivateKey)</B></A> - 
Method in class com.gpki.gpkiapi.ocsp.<A HREF="com/gpki/gpkiapi/ocsp/OCSPRequest.html" title="class in com.gpki.gpkiapi.ocsp">OCSPRequest</A>
<DD>OCSP 요청 메시지 서명에 사용할 요청자의 서명용 인증서와 개인키를 설정한다.
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStamp.html#setMyCert(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)"><B>setMyCert(X509Certificate, PrivateKey)</B></A> - 
Method in class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStamp.html" title="class in com.gpki.gpkiapi.tsa">TimeStamp</A>
<DD>시점확인 토큰을 요청 시, 요청 메시지에 서명하고자 하는 경우에 
 요청자의 서명용 인증서와 개인키를 지정한다.
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStamp.html#setPolicy(java.lang.String)"><B>setPolicy(String)</B></A> - 
Method in class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStamp.html" title="class in com.gpki.gpkiapi.tsa">TimeStamp</A>
<DD>시점확인 서버에서 시점확인 토큰 생성시 사용할 정책 OID를 설정한다.
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#setRevokationCheck(int)"><B>setRevokationCheck(int)</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>인증서 검증 시, 폐지여부 확인 방법을 지정한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedContent.html#setSignTime(java.util.Date)"><B>setSignTime(Date)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedContent.html" title="class in com.gpki.gpkiapi.cms">SignedContent</A>
<DD>서명 메시지를 생성하는 시간을 지정한다. 
<DT><A HREF="com/gpki/gpkiapi/cms/SignedData.html#setSignTime(java.util.Date)"><B>setSignTime(Date)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedData.html" title="class in com.gpki.gpkiapi.cms">SignedData</A>
<DD>서명 메시지를 생성하는 시간을 지정한다. 
<DT><A HREF="com/gpki/gpkiapi_jni.html#setSignTimes(java.lang.String[])"><B>setSignTimes(String[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>&nbsp;
<DT><A HREF="com/gpki/gpkiapi/cms/SignedData.html#setSignerCert(int, int, java.lang.String, long)"><B>setSignerCert(int, int, String, long)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedData.html" title="class in com.gpki.gpkiapi.cms">SignedData</A>
<DD>&nbsp;
<DT><A HREF="com/gpki/gpkiapi_jni.html#setSignerCerts(java.lang.String[])"><B>setSignerCerts(String[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>&nbsp;
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#setUserPolicySet(java.lang.String)"><B>setUserPolicySet(String)</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>허용하는 인증서 정책 집합을 지정한다.
 
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#setValidationTime(java.util.Date)"><B>setValidationTime(Date)</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>검증하는 시간을 지정한다. 
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#setVerifyRange(int)"><B>setVerifyRange(int)</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>인증서 검증 시, 검증 범위를 지정한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Signature.html#sign(byte[])"><B>sign(byte[])</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Signature.html" title="class in com.gpki.gpkiapi.crypto">Signature</A>
<DD>메시지의 서명값을 생성한다.
</DL>
<HR>
<A NAME="_T_"><!-- --></A><H2>
<B>T</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi_jni.html#TSP_GetToken(byte[], int, java.lang.String, boolean, byte[], byte[], java.lang.String, int)"><B>TSP_GetToken(byte[], int, String, boolean, byte[], byte[], String, int)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>시점확인 서버에 메시지에 대해서 시점확인을 요청하고 토큰과 시점확인 서버의 인증서를 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#TSP_GetTokenInfo(byte[])"><B>TSP_GetTokenInfo(byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>시점확인 토큰의 내용을 확인한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#TSP_MakeReqMsg(byte[], int, java.lang.String, boolean, byte[], byte[])"><B>TSP_MakeReqMsg(byte[], int, String, boolean, byte[], byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>시점확인 토큰을 발급받기 위한 요청문을 생성한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#TSP_SendAndRecv(java.lang.String, int, byte[])"><B>TSP_SendAndRecv(String, int, byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>시점확인 요청문을 시점확인 서버에 전송하고 응답 메시지를 받는다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#TSP_VerifyResMsg(byte[])"><B>TSP_VerifyResMsg(byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>시점확인 서버로 부터 받은 응답 메시지를 검증하고 시점확인 서버의 인증서와 시점확인 토큰을 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#TSP_VerifyToken(byte[], byte[])"><B>TSP_VerifyToken(byte[], byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>시점확인 토큰을 검증한다.
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStamp.html" title="class in com.gpki.gpkiapi.tsa"><B>TimeStamp</B></A> - class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStamp.html" title="class in com.gpki.gpkiapi.tsa">TimeStamp</A>.<DD>특정 시간 이전에 메시지의 존재 여부 증명을 위하여 시점확인 서버로 부터 시점확인 토큰을 발급 받는다.<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStamp.html#TimeStamp()"><B>TimeStamp()</B></A> - 
Constructor for class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStamp.html" title="class in com.gpki.gpkiapi.tsa">TimeStamp</A>
<DD>메시지의 시점확인을 받기위한 객체 TimeStamp를 초기화 한다.
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStamp.html#TimeStamp(java.lang.String)"><B>TimeStamp(String)</B></A> - 
Constructor for class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStamp.html" title="class in com.gpki.gpkiapi.tsa">TimeStamp</A>
<DD>메시지의 시점확인을 받기위한 객체 TimeStamp를 초기화 한다.
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStampRes.html" title="class in com.gpki.gpkiapi.tsa"><B>TimeStampRes</B></A> - class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStampRes.html" title="class in com.gpki.gpkiapi.tsa">TimeStampRes</A>.<DD>시점확인 응답 메시지에서 응답 결과와 토큰을 추출한다.<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStampRes.html#TimeStampRes(byte[])"><B>TimeStampRes(byte[])</B></A> - 
Constructor for class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStampRes.html" title="class in com.gpki.gpkiapi.tsa">TimeStampRes</A>
<DD>시점확인 응답 메시지를 설정하여 객체 TimeStampRes를 초기화 한다.
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html" title="class in com.gpki.gpkiapi.tsa"><B>TimeStampToken</B></A> - class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html" title="class in com.gpki.gpkiapi.tsa">TimeStampToken</A>.<DD>시점확인 토큰을 검증하거나 토큰 정보를 조회한다.<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html#TimeStampToken(byte[])"><B>TimeStampToken(byte[])</B></A> - 
Constructor for class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html" title="class in com.gpki.gpkiapi.tsa">TimeStampToken</A>
<DD>시점확인 토큰을 설정하여 객체 TimeStampToken을 초기화 한다.
<DT><A HREF="com/gpki/gpkiapi/util/Dump.html#toHexString(byte[], long, long)"><B>toHexString(byte[], long, long)</B></A> - 
Static method in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Dump.html" title="class in com.gpki.gpkiapi.util">Dump</A>
<DD>binary 데이터를 Hex String으로 변환한다.
<DT><A HREF="com/gpki/gpkiapi/util/Dump.html#toHexString(byte[], long, long, java.io.OutputStream)"><B>toHexString(byte[], long, long, OutputStream)</B></A> - 
Static method in class com.gpki.gpkiapi.util.<A HREF="com/gpki/gpkiapi/util/Dump.html" title="class in com.gpki.gpkiapi.util">Dump</A>
<DD>binary 데이터를 Hex String으로 변환한다.
</DL>
<HR>
<A NAME="_U_"><!-- --></A><H2>
<B>U</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#useCache(boolean)"><B>useCache(boolean)</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>인증서 검증 시, 캐쉬 사용 여부를 지정한다.
</DL>
<HR>
<A NAME="_V_"><!-- --></A><H2>
<B>V</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi_jni.html#VID_GetRandomFromPriKey(byte[])"><B>VID_GetRandomFromPriKey(byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>식별번호를 이용한 본인확인을 위해서 개인키에 포함되어있는 랜덤값을 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#VID_Verify(byte[], byte[], java.lang.String)"><B>VID_Verify(byte[], byte[], String)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>식별번호와 랜덤값을 이용하여 인증서 사용자의 본인확인을 수행한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#VID_VerifyByIVS(java.lang.String, byte[], byte[], java.lang.String, byte[])"><B>VID_VerifyByIVS(String, byte[], byte[], String, byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>환경파일에있는 통합검증서버의 정보(IP, Port)를 이용하여 통합검증서버에 사용자의 본인확인을 요청한다.
<DT><A HREF="com/gpki/gpkiapi/ivs/VerifyCert.html" title="class in com.gpki.gpkiapi.ivs"><B>VerifyCert</B></A> - class com.gpki.gpkiapi.ivs.<A HREF="com/gpki/gpkiapi/ivs/VerifyCert.html" title="class in com.gpki.gpkiapi.ivs">VerifyCert</A>.<DD>통합검증서버를 통하여 인증서 검증을 수행한다.<DT><A HREF="com/gpki/gpkiapi/ivs/VerifyCert.html#VerifyCert(java.lang.String)"><B>VerifyCert(String)</B></A> - 
Constructor for class com.gpki.gpkiapi.ivs.<A HREF="com/gpki/gpkiapi/ivs/VerifyCert.html" title="class in com.gpki.gpkiapi.ivs">VerifyCert</A>
<DD>인증서 검증을 위한  VerifyCert 객체를 생성한다.
 
<DT><A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html#validate(int, com.gpki.gpkiapi.cert.X509Certificate)"><B>validate(int, X509Certificate)</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/CertPathValidator.html" title="class in com.gpki.gpkiapi.cert">CertPathValidator</A>
<DD>인증서를 검증한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedContent.html#verify(byte[])"><B>verify(byte[])</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedContent.html" title="class in com.gpki.gpkiapi.cms">SignedContent</A>
<DD>서명 메시지를 검증한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedData.html#verify(byte[])"><B>verify(byte[])</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedData.html" title="class in com.gpki.gpkiapi.cms">SignedData</A>
<DD>서명 메시지를 검증한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Mac.html#verify(byte[], byte[])"><B>verify(byte[], byte[])</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Mac.html" title="class in com.gpki.gpkiapi.crypto">Mac</A>
<DD>메시지의 인증코드를 검증한다.
<DT><A HREF="com/gpki/gpkiapi/crypto/Signature.html#verify(byte[], byte[])"><B>verify(byte[], byte[])</B></A> - 
Method in class com.gpki.gpkiapi.crypto.<A HREF="com/gpki/gpkiapi/crypto/Signature.html" title="class in com.gpki.gpkiapi.crypto">Signature</A>
<DD>메시지의 서명값을 검증한다.
<DT><A HREF="com/gpki/gpkiapi/ivs/VerifyCert.html#verify(com.gpki.gpkiapi.cert.X509Certificate)"><B>verify(X509Certificate)</B></A> - 
Method in class com.gpki.gpkiapi.ivs.<A HREF="com/gpki/gpkiapi/ivs/VerifyCert.html" title="class in com.gpki.gpkiapi.ivs">VerifyCert</A>
<DD>통합검증서버를 통하여 인증서 검증을 수행한다.
<DT><A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html#verify(byte[])"><B>verify(byte[])</B></A> - 
Method in class com.gpki.gpkiapi.tsa.<A HREF="com/gpki/gpkiapi/tsa/TimeStampToken.html" title="class in com.gpki.gpkiapi.tsa">TimeStampToken</A>
<DD>시점확인 토큰이 시점확인을 요청 했던 메시지의 토큰이 맞는지를 확인한다.
<DT><A HREF="com/gpki/gpkiapi/cert/X509Certificate.html#verifyVID(java.lang.String, byte[])"><B>verifyVID(String, byte[])</B></A> - 
Method in class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>
<DD>인증서의 "주체 대체 이름" 필드에 있는 본인확인 정보를 검증한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedData.html#verify_File(java.lang.String, java.lang.String)"><B>verify_File(String, String)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedData.html" title="class in com.gpki.gpkiapi.cms">SignedData</A>
<DD>서명 메시지를 검증한다.
<DT><A HREF="com/gpki/gpkiapi/cms/SignedData.html#verify_noContetn_File(java.lang.String, java.lang.String)"><B>verify_noContetn_File(String, String)</B></A> - 
Method in class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/SignedData.html" title="class in com.gpki.gpkiapi.cms">SignedData</A>
<DD>원본 메시지가 포함되어있지 않은 서명 메시지를 검증한다.
</DL>
<HR>
<A NAME="_W_"><!-- --></A><H2>
<B>W</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi_jni.html#WCMS_MakeSignedContent(byte[], byte[], byte[], java.lang.String)"><B>WCMS_MakeSignedContent(byte[], byte[], byte[], String)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>무선용 서명 메시지를 생성한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#WCMS_MakeWapEnvelopedData(byte[], byte[], int)"><B>WCMS_MakeWapEnvelopedData(byte[], byte[], int)</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>무선용 비대칭키 암호 메시지를 생성한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#WCMS_ProcessSignedContent(byte[])"><B>WCMS_ProcessSignedContent(byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>무선용 서명 메시지를 검증하고 원본 메시지와 서명자 정보를 획득한다.
<DT><A HREF="com/gpki/gpkiapi_jni.html#WCMS_ProcessWapEnvelopedData(byte[], byte[], byte[])"><B>WCMS_ProcessWapEnvelopedData(byte[], byte[], byte[])</B></A> - 
Method in class com.gpki.<A HREF="com/gpki/gpkiapi_jni.html" title="class in com.gpki">gpkiapi_jni</A>
<DD>무선용 비대칭키 암호 메시지를 처리한다.
<DT><A HREF="com/gpki/gpkiapi/cms/WapEnvelopedData.html" title="class in com.gpki.gpkiapi.cms"><B>WapEnvelopedData</B></A> - class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/WapEnvelopedData.html" title="class in com.gpki.gpkiapi.cms">WapEnvelopedData</A>.<DD>무선 환경에서 비대칭키 암호 메시지를 생성/처리한다.<DT><A HREF="com/gpki/gpkiapi/cms/WapEnvelopedData.html#WapEnvelopedData()"><B>WapEnvelopedData()</B></A> - 
Constructor for class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/WapEnvelopedData.html" title="class in com.gpki.gpkiapi.cms">WapEnvelopedData</A>
<DD>암호 메시지 생성/처리를 위한 WapEnvelopedData 객체를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/cms/WapEnvelopedData.html#WapEnvelopedData(java.lang.String)"><B>WapEnvelopedData(String)</B></A> - 
Constructor for class com.gpki.gpkiapi.cms.<A HREF="com/gpki/gpkiapi/cms/WapEnvelopedData.html" title="class in com.gpki.gpkiapi.cms">WapEnvelopedData</A>
<DD>생성/처리될 암호 메시지에 필요한 옵션을 설정하여 WapEnvelopedData 객체를 생성한다.
<DT><A HREF="com/gpki/gpkiapi/storage/Disk.html#write(java.lang.String, byte[])"><B>write(String, byte[])</B></A> - 
Static method in class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/Disk.html" title="class in com.gpki.gpkiapi.storage">Disk</A>
<DD>데이터를 지정하는 경로에 저장한다.
<DT><A HREF="com/gpki/gpkiapi/storage/Disk.html#write(java.lang.String, java.lang.String, boolean)"><B>write(String, String, boolean)</B></A> - 
Static method in class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/Disk.html" title="class in com.gpki.gpkiapi.storage">Disk</A>
<DD>데이터를 지정하는 경로에 저장한다.
<DT><A HREF="com/gpki/gpkiapi/storage/Disk.html#writeCert(java.lang.String, com.gpki.gpkiapi.cert.X509Certificate)"><B>writeCert(String, X509Certificate)</B></A> - 
Static method in class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/Disk.html" title="class in com.gpki.gpkiapi.storage">Disk</A>
<DD>인증서를 지정한 경로에 저장한다.
<DT><A HREF="com/gpki/gpkiapi/storage/SmartCard.html#writeCert(int, java.lang.String, com.gpki.gpkiapi.cert.X509Certificate)"><B>writeCert(int, String, X509Certificate)</B></A> - 
Method in class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/SmartCard.html" title="class in com.gpki.gpkiapi.storage">SmartCard</A>
<DD>인증서를 지정한 위치에 저장한다.
<DT><A HREF="com/gpki/gpkiapi/storage/Disk.html#writePriKey(java.lang.String, java.lang.String, java.lang.String, com.gpki.gpkiapi.crypto.PrivateKey)"><B>writePriKey(String, String, String, PrivateKey)</B></A> - 
Static method in class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/Disk.html" title="class in com.gpki.gpkiapi.storage">Disk</A>
<DD>지정한 경로에 개인키를 저장한다. 
<DT><A HREF="com/gpki/gpkiapi/storage/SmartCard.html#writePriKey(int, java.lang.String, java.lang.String, java.lang.String, com.gpki.gpkiapi.crypto.PrivateKey)"><B>writePriKey(int, String, String, String, PrivateKey)</B></A> - 
Method in class com.gpki.gpkiapi.storage.<A HREF="com/gpki/gpkiapi/storage/SmartCard.html" title="class in com.gpki.gpkiapi.storage">SmartCard</A>
<DD>개인키를 지정한 위치에 저장한다.
</DL>
<HR>
<A NAME="_X_"><!-- --></A><H2>
<B>X</B></H2>
<DL>
<DT><A HREF="com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert"><B>X509Certificate</B></A> - class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>.<DD>X.509 형식의 인증서 정보를 확인한다.<DT><A HREF="com/gpki/gpkiapi/cert/X509Certificate.html#X509Certificate(byte[])"><B>X509Certificate(byte[])</B></A> - 
Constructor for class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>
<DD>인증서 정보를 입력하여 X509Certificate 객체를 초기화한다.
<DT><A HREF="com/gpki/gpkiapi/cert/X509Certificate.html#X509Certificate(java.lang.String)"><B>X509Certificate(String)</B></A> - 
Constructor for class com.gpki.gpkiapi.cert.<A HREF="com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>
<DD>인증서 정보를 입력하여 X509Certificate 객체를 초기화한다.
</DL>
<HR>
<A HREF="#_A_">A</A> <A HREF="#_B_">B</A> <A HREF="#_C_">C</A> <A HREF="#_D_">D</A> <A HREF="#_E_">E</A> <A HREF="#_G_">G</A> <A HREF="#_H_">H</A> <A HREF="#_I_">I</A> <A HREF="#_K_">K</A> <A HREF="#_L_">L</A> <A HREF="#_M_">M</A> <A HREF="#_N_">N</A> <A HREF="#_O_">O</A> <A HREF="#_P_">P</A> <A HREF="#_R_">R</A> <A HREF="#_S_">S</A> <A HREF="#_T_">T</A> <A HREF="#_U_">U</A> <A HREF="#_V_">V</A> <A HREF="#_W_">W</A> <A HREF="#_X_">X</A> 

<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<b>GPKIAPI <br>V1.3.0.0</b></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV&nbsp;
&nbsp;NEXT</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="index.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-all.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>

</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>
<br><font size=3><b>Copyright ⓒ2003-2006 GCC Co.,Ltd . All rights reserved</b></font>
</BODY>
</HTML>
