<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=euc-kr">
<!-- Generated by javadoc (build 1.4.2_09) on Thu Jul 13 12:14:12 GMT+09:00 2006 -->
<TITLE>
Uses of Class com.gpki.gpkiapi.exception.GpkiApiException (GPKIAPI)
</TITLE>


<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    parent.document.title="Uses of Class com.gpki.gpkiapi.exception.GpkiApiException (GPKIAPI)";
}
</SCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<b>GPKIAPI <br>V1.2.1.1</b></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV&nbsp;
&nbsp;NEXT</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="GpkiApiException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>

</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<CENTER>
<H2>
<B>Uses of Class<br>com.gpki.gpkiapi.exception.GpkiApiException</B></H2>
</CENTER>

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
Packages that use <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><A HREF="#com.gpki.gpkiapi"><B>com.gpki.gpkiapi</B></A></TD>
<TD>표준보안API를 초기화한다.&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><A HREF="#com.gpki.gpkiapi.cert"><B>com.gpki.gpkiapi.cert</B></A></TD>
<TD>X.509 형식의 인증서 정보를 확인한다.&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><A HREF="#com.gpki.gpkiapi.cms"><B>com.gpki.gpkiapi.cms</B></A></TD>
<TD>유/무선 환경에서 메시지에 대한 인증, 무결성, 기밀성 서비스를 제공하기 위해서 메시지 서명, 암호화 기능을 제공한다.&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><A HREF="#com.gpki.gpkiapi.crypto"><B>com.gpki.gpkiapi.crypto</B></A></TD>
<TD>서명/검증, 암/복호화, 해쉬, 맥값 생성/검증을 위한 암호 알고리즘을 제공한다.&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><A HREF="#com.gpki.gpkiapi.ivs"><B>com.gpki.gpkiapi.ivs</B></A></TD>
<TD>통합검증서버를 이용하여 인증서 검증, 본인확인을 수행한다.&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><A HREF="#com.gpki.gpkiapi.pkcs"><B>com.gpki.gpkiapi.pkcs</B></A></TD>
<TD>개인키를 비밀번호를 이용하여 암/복호화 한다.&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><A HREF="#com.gpki.gpkiapi.storage"><B>com.gpki.gpkiapi.storage</B></A></TD>
<TD>디스크, 스마트 카드로 부터 개인키, 인증서를 저장/읽기/삭제를 수행한다.&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><A HREF="#com.gpki.gpkiapi.tsa"><B>com.gpki.gpkiapi.tsa</B></A></TD>
<TD>특정 시점에 메시지가 존재하였음을 증명하기 위한 시점 확인 서비스를 이용한다.&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><A HREF="#com.gpki.gpkiapi.util"><B>com.gpki.gpkiapi.util</B></A></TD>
<TD>표준보안API를 사용하면서 부가적으로 필요한 유틸을 제공한다.&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<P>
<A NAME="com.gpki.gpkiapi"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
Uses of <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A> in <A HREF="../../../../../com/gpki/gpkiapi/package-summary.html">com.gpki.gpkiapi</A></FONT></TD>
</TR>
</TABLE>
&nbsp;
<P>

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
<TD COLSPAN=2>Methods in <A HREF="../../../../../com/gpki/gpkiapi/package-summary.html">com.gpki.gpkiapi</A> that throw <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>GpkiApi.</B><B><A HREF="../../../../../com/gpki/gpkiapi/GpkiApi.html#init(java.lang.String)">init</A></B>(java.lang.String&nbsp;workDir)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;API 사용을 위해서는 해당 함수를 호출하여 반드시 초기화 하여야 한다.
 </TD>
</TR>
</TABLE>
&nbsp;
<P>
<A NAME="com.gpki.gpkiapi.cert"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
Uses of <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A> in <A HREF="../../../../../com/gpki/gpkiapi/cert/package-summary.html">com.gpki.gpkiapi.cert</A></FONT></TD>
</TR>
</TABLE>
&nbsp;
<P>

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
<TD COLSPAN=2>Methods in <A HREF="../../../../../com/gpki/gpkiapi/cert/package-summary.html">com.gpki.gpkiapi.cert</A> that throw <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B>X509Certificate.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html#getPemCert()">getPemCert</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PEM 형식의 인증서 데이터를 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>X509Certificate.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html#verifyVID(java.lang.String, byte[])">verifyVID</A></B>(java.lang.String&nbsp;idn,
          byte[]&nbsp;random)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;인증서의 "주체 대체 이름" 필드에 있는 본인확인 정보를 검증한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.math.BigInteger</CODE></FONT></TD>
<TD><CODE><B>X509Certificate.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html#getSerialNumber()">getSerialNumber</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;인증서의 일련번호를 획득한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B>X509Certificate.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html#getIssuerDN()">getIssuerDN</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;인증서의 발급자 이름(DN)을 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Date</CODE></FONT></TD>
<TD><CODE><B>X509Certificate.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html#getNotBefore()">getNotBefore</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;인증서 유효기간의 시작 일자를 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Date</CODE></FONT></TD>
<TD><CODE><B>X509Certificate.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html#getNotAfter()">getNotAfter</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;인증서 유효기간의 만료 일자를 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B>X509Certificate.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html#getSubjectDN()">getSubjectDN</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;인증서의 소유자 이름(DN)을 획득한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B>X509Certificate.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html#getSubjectUID()">getSubjectUID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;인증서의 소유자 ID값을 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/crypto/PublicKey.html" title="class in com.gpki.gpkiapi.crypto">PublicKey</A></CODE></FONT></TD>
<TD><CODE><B>X509Certificate.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html#getSubjectPublicKeyInfo()">getSubjectPublicKeyInfo</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;인증서의 공개키를 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B>X509Certificate.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html#getKeyUsage()">getKeyUsage</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;인증서의 확장필드인 키 용도 값을 획득한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B>X509Certificate.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html#getBasicConstsraints()">getBasicConstsraints</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;인증서의 확장필드인 기본 제한 값을 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B>X509Certificate.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html#getCertPolicy()">getCertPolicy</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;인증서의 확장필드인 인증서 정책 정보를 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B>X509Certificate.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html#getRemainDays()">getRemainDays</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;인증서가 만료되기 까지의 남은 기간을 확인한다.</TD>
</TR>
</TABLE>
&nbsp;
<P>

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
<TD COLSPAN=2>Constructors in <A HREF="../../../../../com/gpki/gpkiapi/cert/package-summary.html">com.gpki.gpkiapi.cert</A> that throw <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html#X509Certificate(byte[])">X509Certificate</A></B>(byte[]&nbsp;cert)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;인증서 정보를 입력하여 X509Certificate 객체를 초기화한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html#X509Certificate(java.lang.String)">X509Certificate</A></B>(java.lang.String&nbsp;cert)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;인증서 정보를 입력하여 X509Certificate 객체를 초기화한다.</TD>
</TR>
</TABLE>
&nbsp;
<P>
<A NAME="com.gpki.gpkiapi.cms"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
Uses of <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A> in <A HREF="../../../../../com/gpki/gpkiapi/cms/package-summary.html">com.gpki.gpkiapi.cms</A></FONT></TD>
</TR>
</TABLE>
&nbsp;
<P>

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
<TD COLSPAN=2>Methods in <A HREF="../../../../../com/gpki/gpkiapi/cms/package-summary.html">com.gpki.gpkiapi.cms</A> that throw <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>EnvelopedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/EnvelopedData.html#addRecipient(com.gpki.gpkiapi.cert.X509Certificate)">addRecipient</A></B>(<A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;cert)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;암호 메시지 수신자의 인증서를 추가한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>EnvelopedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/EnvelopedData.html#generate(byte[])">generate</A></B>(byte[]&nbsp;msg)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;암호 메시지를 생성한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>EnvelopedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/EnvelopedData.html#generate_File(java.lang.String, java.lang.String)">generate_File</A></B>(java.lang.String&nbsp;msgFilePath,
              java.lang.String&nbsp;envDataFilePath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;파일 형태의 원본 메시지에 대한 암호 메시지를 생성하여 파일로 저장한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>EnvelopedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/EnvelopedData.html#process(byte[], com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)">process</A></B>(byte[]&nbsp;envData,
        <A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;cert,
        <A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;암호화된 메시지를 복호화하여 원본 메시지를 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>EnvelopedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/EnvelopedData.html#process_File(java.lang.String, com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey, java.lang.String)">process_File</A></B>(java.lang.String&nbsp;envDataFilePath,
             <A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;cert,
             <A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey,
             java.lang.String&nbsp;msgFilePath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;파일 형태의 암호화된 메시지를 복호화하여 원본 메시지를 파일로 저장한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/crypto/SecretKey.html" title="class in com.gpki.gpkiapi.crypto">SecretKey</A></CODE></FONT></TD>
<TD><CODE><B>EnvelopedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/EnvelopedData.html#getSecretKey()">getSecretKey</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;암호화 메시지 생성/처리 후, 사용되었던 대칭키 정보를 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>SignedAndEnvelopedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html#setMyCert(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)">setMyCert</A></B>(<A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;cert,
          <A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;prikey)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;사용자의 인증서를 설정한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>SignedAndEnvelopedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html#generate(com.gpki.gpkiapi.cert.X509Certificate, byte[])">generate</A></B>(<A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;recCert,
         byte[]&nbsp;msg)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 및 암호 메시지를 생성한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>SignedAndEnvelopedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html#process(byte[])">process</A></B>(byte[]&nbsp;signedAndEnvData)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 및 암호 메시지를 처리한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A></CODE></FONT></TD>
<TD><CODE><B>SignedAndEnvelopedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html#getSignerCert()">getSignerCert</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 및 암호화 메시지를 처리 한 후, 서명자의 인증서를 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/crypto/SecretKey.html" title="class in com.gpki.gpkiapi.crypto">SecretKey</A></CODE></FONT></TD>
<TD><CODE><B>SignedAndEnvelopedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html#getSecretKey()">getSecretKey</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 및 암호 메시지 생성/처리 후, 사용되었던 대칭키 정보를 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>SignedContent.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedContent.html#setSignTime(java.util.Date)">setSignTime</A></B>(java.util.Date&nbsp;time)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지를 생성하는 시간을 지정한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>SignedContent.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedContent.html#generate(byte[], com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)">generate</A></B>(byte[]&nbsp;msg,
         <A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;signCert,
         <A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지를 생성한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>SignedContent.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedContent.html#verify(byte[])">verify</A></B>(byte[]&nbsp;signedContent)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지를 검증한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A></CODE></FONT></TD>
<TD><CODE><B>SignedContent.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedContent.html#getSignerCert()">getSignerCert</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명자의 인증서를 획득한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Date</CODE></FONT></TD>
<TD><CODE><B>SignedContent.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedContent.html#getSigningTime()">getSigningTime</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명자의 서명 시간을 획득한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>SignedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedData.html#setMessage(byte[])">setMessage</A></B>(byte[]&nbsp;msg)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명할 메시지를 설정한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>SignedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedData.html#setMessage_File(java.lang.String)">setMessage_File</A></B>(java.lang.String&nbsp;msgFilePath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명할 메시지 파일 위치를 설정한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>SignedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedData.html#setSignTime(java.util.Date)">setSignTime</A></B>(java.util.Date&nbsp;time)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지를 생성하는 시간을 지정한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>SignedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedData.html#generate(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)">generate</A></B>(<A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;signCert,
         <A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지를 생성한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>SignedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedData.html#generate_File(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey, java.lang.String)">generate_File</A></B>(<A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;signCert,
              <A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey,
              java.lang.String&nbsp;signedDataFilePath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지를 생성하여 파일로 저장한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>SignedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedData.html#addSigner(byte[], com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)">addSigner</A></B>(byte[]&nbsp;signedData,
          <A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;signCert,
          <A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;이미 생성된 서명 메시지에 서명을 추가한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>SignedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedData.html#verify(byte[])">verify</A></B>(byte[]&nbsp;signedData)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지를 검증한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>SignedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedData.html#verify_File(java.lang.String, java.lang.String)">verify_File</A></B>(java.lang.String&nbsp;signedDataFilePath,
            java.lang.String&nbsp;msgFilePath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지를 검증한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A></CODE></FONT></TD>
<TD><CODE><B>SignedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedData.html#getSignerCert(int)">getSignerCert</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명자의 인증서를 획득한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Date</CODE></FONT></TD>
<TD><CODE><B>SignedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedData.html#getSigningTime(int)">getSigningTime</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;해당 인덱스 서명자의 서명 시간을 획득한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>WapEnvelopedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/WapEnvelopedData.html#setMyCert(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)">setMyCert</A></B>(<A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;cert,
          <A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;prikey)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;암호 메시지를 처리하기 위해서 사용될 사용자의 암호화용 인증서와 개인키를 설정한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>WapEnvelopedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/WapEnvelopedData.html#generate(byte[], com.gpki.gpkiapi.cert.X509Certificate)">generate</A></B>(byte[]&nbsp;msg,
         <A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;recipientCert)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;암호 메시지를 생성한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>WapEnvelopedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/WapEnvelopedData.html#process(byte[])">process</A></B>(byte[]&nbsp;wapEnvData)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;암호 메시지를 복호화한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/crypto/SecretKey.html" title="class in com.gpki.gpkiapi.crypto">SecretKey</A></CODE></FONT></TD>
<TD><CODE><B>WapEnvelopedData.</B><B><A HREF="../../../../../com/gpki/gpkiapi/cms/WapEnvelopedData.html#getSecretKey()">getSecretKey</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;암호 메시지 생성/처리 후, 사용되었던 대칭키 정보를 획득한다.</TD>
</TR>
</TABLE>
&nbsp;
<P>

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
<TD COLSPAN=2>Constructors in <A HREF="../../../../../com/gpki/gpkiapi/cms/package-summary.html">com.gpki.gpkiapi.cms</A> that throw <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../com/gpki/gpkiapi/cms/EnvelopedData.html#EnvelopedData()">EnvelopedData</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;암호 메시지 생성/처리를 위한 EnvelopedData 객체를 생성한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../com/gpki/gpkiapi/cms/EnvelopedData.html#EnvelopedData(java.lang.String)">EnvelopedData</A></B>(java.lang.String&nbsp;algorithm)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;사용할 대칭키 알고리즘을 설정하여 EnvelopedData 객체를 생성한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html#SignedAndEnvelopedData()">SignedAndEnvelopedData</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 및 암호 메시지 생성/처리를 위한 SignedAndEnvelopedData 객체를 생성한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../com/gpki/gpkiapi/cms/SignedAndEnvelopedData.html#SignedAndEnvelopedData(java.lang.String)">SignedAndEnvelopedData</A></B>(java.lang.String&nbsp;algorithm)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;사용할 대칭키 알고리즘을 설정하여 SignedAndEnvelopedData 객체를 생성한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../com/gpki/gpkiapi/cms/WapEnvelopedData.html#WapEnvelopedData()">WapEnvelopedData</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;암호 메시지 생성/처리를 위한 WapEnvelopedData 객체를 생성한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../com/gpki/gpkiapi/cms/WapEnvelopedData.html#WapEnvelopedData(java.lang.String)">WapEnvelopedData</A></B>(java.lang.String&nbsp;algorithm)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;생성/처리될 암호 메시지에 필요한 옵션을 설정하여 WapEnvelopedData 객체를 생성한다.</TD>
</TR>
</TABLE>
&nbsp;
<P>
<A NAME="com.gpki.gpkiapi.crypto"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
Uses of <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A> in <A HREF="../../../../../com/gpki/gpkiapi/crypto/package-summary.html">com.gpki.gpkiapi.crypto</A></FONT></TD>
</TR>
</TABLE>
&nbsp;
<P>

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
<TD COLSPAN=2>Methods in <A HREF="../../../../../com/gpki/gpkiapi/crypto/package-summary.html">com.gpki.gpkiapi.crypto</A> that throw <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B>Algorithm.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Algorithm.html#getCipherAlg(java.lang.String)">getCipherAlg</A></B>(java.lang.String&nbsp;algo)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;암/복호화 알고리즘의 코드값을 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B>Algorithm.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Algorithm.html#getSecretKeyAlg(java.lang.String)">getSecretKeyAlg</A></B>(java.lang.String&nbsp;algo)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;대칭키 키 알고리즘의 코드값을 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B>Algorithm.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Algorithm.html#getKeyPairAlg(java.lang.String)">getKeyPairAlg</A></B>(java.lang.String&nbsp;algo)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;비대칭키 알고리즘의 코드값을 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B>Algorithm.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Algorithm.html#getMacAlg(java.lang.String)">getMacAlg</A></B>(java.lang.String&nbsp;algo)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MAC 알고리즘의 코드값을 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B>Algorithm.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Algorithm.html#getHashAlg(java.lang.String)">getHashAlg</A></B>(java.lang.String&nbsp;algo)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hash 알고리즘의 코드값을 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B>Algorithm.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Algorithm.html#isSame(java.lang.String, int)">isSame</A></B>(java.lang.String&nbsp;keyAlgo,
       int&nbsp;algCode)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;문자열로 입력된 키 알고리즘과 암호 연산 알고리즘 코드가 같은 알고리즘인지 확인한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/crypto/Cipher.html" title="class in com.gpki.gpkiapi.crypto">Cipher</A></CODE></FONT></TD>
<TD><CODE><B>Cipher.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Cipher.html#getInstance(java.lang.String)">getInstance</A></B>(java.lang.String&nbsp;algorithm)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;특정 암/복호화 연산을 수행할 수 있는 Cipher 객체를 생성한다.
 </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>Cipher.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Cipher.html#init(int, com.gpki.gpkiapi.crypto.Key)">init</A></B>(int&nbsp;opmode,
     <A HREF="../../../../../com/gpki/gpkiapi/crypto/Key.html" title="interface in com.gpki.gpkiapi.crypto">Key</A>&nbsp;key)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;연산 종류와 사용될 키를 이용하여 객체를 초기화한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>Cipher.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Cipher.html#doFinal(byte[])">doFinal</A></B>(byte[]&nbsp;input)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;초기화(init)시에 지정한 모드로 연산(암호화/복호화)을 수행한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>Cipher.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Cipher.html#doFinal_File(java.lang.String, java.lang.String)">doFinal_File</A></B>(java.lang.String&nbsp;inputFilePath,
             java.lang.String&nbsp;outputFilePath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;초기화(init)시에 지정한 모드로 연산(암호화/복호화)을 수행한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/crypto/KeyGenerator.html" title="class in com.gpki.gpkiapi.crypto">KeyGenerator</A></CODE></FONT></TD>
<TD><CODE><B>KeyGenerator.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/KeyGenerator.html#getInstance(java.lang.String)">getInstance</A></B>(java.lang.String&nbsp;algorithm)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;특정 대칭키를 생성을 수행할 수 있는 KeyGenerator 객체를 생성한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/crypto/SecretKey.html" title="class in com.gpki.gpkiapi.crypto">SecretKey</A></CODE></FONT></TD>
<TD><CODE><B>KeyGenerator.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/KeyGenerator.html#generateKey()">generateKey</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;지정된 키 알고리즘에 따른 대칭키를 생성한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/crypto/Mac.html" title="class in com.gpki.gpkiapi.crypto">Mac</A></CODE></FONT></TD>
<TD><CODE><B>Mac.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Mac.html#getInstance(java.lang.String)">getInstance</A></B>(java.lang.String&nbsp;algorithm)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;특정 알고리즘에 따른 인증코드 생성을 수행할 수 있는 Mac 객체를 생성한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>Mac.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Mac.html#init(java.lang.String)">init</A></B>(java.lang.String&nbsp;key)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;사용될 키를 이용하여 객체를 초기화한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>Mac.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Mac.html#generate(byte[])">generate</A></B>(byte[]&nbsp;data)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;입력되는 데이터의 인증코드를 생성한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>Mac.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Mac.html#verify(byte[], byte[])">verify</A></B>(byte[]&nbsp;data,
       byte[]&nbsp;mac)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;메시지의 인증코드를 검증한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/crypto/MessageDigest.html" title="class in com.gpki.gpkiapi.crypto">MessageDigest</A></CODE></FONT></TD>
<TD><CODE><B>MessageDigest.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/MessageDigest.html#getInstance(java.lang.String)">getInstance</A></B>(java.lang.String&nbsp;algorithm)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;특정 알고리즘에 따른 메시지 다이제스트를 생성할 수 있는 MessageDigest 객체를 생성한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>MessageDigest.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/MessageDigest.html#digest(byte[])">digest</A></B>(byte[]&nbsp;input)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;메시지 다이제스트를 생성한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>PrivateKey.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html#getRandomForVID()">getRandomForVID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;개인키에 포함되어있는 본인확인을 위한 랜덤값을 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>Random.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Random.html#generateRandom(int)">generateRandom</A></B>(int&nbsp;length)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;원하는 길이의 랜덤값을 생성한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>SecretKey.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/SecretKey.html#setKeyAndIv(byte[], byte[])">setKeyAndIv</A></B>(byte[]&nbsp;key,
            byte[]&nbsp;iv)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;대칭키 암/복호화를 위해 사용할 키와 초기벡터를 설정한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>Signature.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Signature.html#initSign(com.gpki.gpkiapi.crypto.PrivateKey, java.lang.String)">initSign</A></B>(<A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey,
         java.lang.String&nbsp;msgDigestAlg)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;메시지 서명값을 생성하기 위해서 개인키와 해쉬알고리즘으로 초기화한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>Signature.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Signature.html#initSign(com.gpki.gpkiapi.crypto.PrivateKey, com.gpki.gpkiapi.crypto.PublicKey, java.lang.String)">initSign</A></B>(<A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey,
         <A HREF="../../../../../com/gpki/gpkiapi/crypto/PublicKey.html" title="class in com.gpki.gpkiapi.crypto">PublicKey</A>&nbsp;pubKey,
         java.lang.String&nbsp;msgDigestAlg)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;메시지 서명값을 생성하기 위해서 개인키, 공개키, 해쉬알고리즘으로 초기화한다<br>
 KCDSA 서명과 같이 서명값 생성 시, 개인키와 공개키가 모두 필요한 알고리즘 사용시 사용한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>Signature.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Signature.html#initVerify(com.gpki.gpkiapi.crypto.PublicKey, java.lang.String)">initVerify</A></B>(<A HREF="../../../../../com/gpki/gpkiapi/crypto/PublicKey.html" title="class in com.gpki.gpkiapi.crypto">PublicKey</A>&nbsp;pubKey,
           java.lang.String&nbsp;msgDigestAlg)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;메시지 서명값을 검증하기 위해서 공개키와 해쉬알고리즘으로 초기화 한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>Signature.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Signature.html#sign(byte[])">sign</A></B>(byte[]&nbsp;data)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;메시지의 서명값을 생성한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>Signature.</B><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/Signature.html#verify(byte[], byte[])">verify</A></B>(byte[]&nbsp;data,
       byte[]&nbsp;signature)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;메시지의 서명값을 검증한다.</TD>
</TR>
</TABLE>
&nbsp;
<P>

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
<TD COLSPAN=2>Constructors in <A HREF="../../../../../com/gpki/gpkiapi/crypto/package-summary.html">com.gpki.gpkiapi.crypto</A> that throw <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html#PrivateKey(byte[])">PrivateKey</A></B>(byte[]&nbsp;prikey)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;개인키 정보를 입력하여 PrivateKey 객체를 초기화한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/PublicKey.html#PublicKey(byte[])">PublicKey</A></B>(byte[]&nbsp;pubKey)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;공개키 입력하여 PublicKey 객체를 초기화한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../com/gpki/gpkiapi/crypto/SecretKey.html#SecretKey(java.lang.String, byte[], byte[])">SecretKey</A></B>(java.lang.String&nbsp;algorithm,
          byte[]&nbsp;key,
          byte[]&nbsp;iv)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key와 iv를 지정하여 SecretKey 객체를 초기화 한다.</TD>
</TR>
</TABLE>
&nbsp;
<P>
<A NAME="com.gpki.gpkiapi.ivs"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
Uses of <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A> in <A HREF="../../../../../com/gpki/gpkiapi/ivs/package-summary.html">com.gpki.gpkiapi.ivs</A></FONT></TD>
</TR>
</TABLE>
&nbsp;
<P>

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
<TD COLSPAN=2>Methods in <A HREF="../../../../../com/gpki/gpkiapi/ivs/package-summary.html">com.gpki.gpkiapi.ivs</A> that throw <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>IdentifyUser.</B><B><A HREF="../../../../../com/gpki/gpkiapi/ivs/IdentifyUser.html#setMyCert(com.gpki.gpkiapi.cert.X509Certificate)">setMyCert</A></B>(<A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;cert)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;통합검증서버에 본인확인을 요청하기 위해서는 요청하는 사람의 인증서를 설정한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>IdentifyUser.</B><B><A HREF="../../../../../com/gpki/gpkiapi/ivs/IdentifyUser.html#identify(java.lang.String, byte[], com.gpki.gpkiapi.cert.X509Certificate)">identify</A></B>(java.lang.String&nbsp;idn,
         byte[]&nbsp;random,
         <A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;cert)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;본인확인을 요청한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>VerifyCert.</B><B><A HREF="../../../../../com/gpki/gpkiapi/ivs/VerifyCert.html#setMyCert(com.gpki.gpkiapi.cert.X509Certificate)">setMyCert</A></B>(<A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;cert)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;통합검증서버에 인증서 검증을 요청하기 위해서는 요청하는 사람의 인증서를 설정한다.
 </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>VerifyCert.</B><B><A HREF="../../../../../com/gpki/gpkiapi/ivs/VerifyCert.html#verify(com.gpki.gpkiapi.cert.X509Certificate)">verify</A></B>(<A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;cert)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;통합검증서버를 통하여 인증서 검증을 수행한다.</TD>
</TR>
</TABLE>
&nbsp;
<P>
<A NAME="com.gpki.gpkiapi.pkcs"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
Uses of <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A> in <A HREF="../../../../../com/gpki/gpkiapi/pkcs/package-summary.html">com.gpki.gpkiapi.pkcs</A></FONT></TD>
</TR>
</TABLE>
&nbsp;
<P>

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
<TD COLSPAN=2>Methods in <A HREF="../../../../../com/gpki/gpkiapi/pkcs/package-summary.html">com.gpki.gpkiapi.pkcs</A> that throw <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>Pkcs5.</B><B><A HREF="../../../../../com/gpki/gpkiapi/pkcs/Pkcs5.html#encrypt(com.gpki.gpkiapi.crypto.PrivateKey, java.lang.String, java.lang.String)">encrypt</A></B>(<A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey,
        java.lang.String&nbsp;passwd,
        java.lang.String&nbsp;algorithm)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;개인키를 비밀번호를 이용하여 암호화한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A></CODE></FONT></TD>
<TD><CODE><B>Pkcs5.</B><B><A HREF="../../../../../com/gpki/gpkiapi/pkcs/Pkcs5.html#decrypt(byte[], java.lang.String)">decrypt</A></B>(byte[]&nbsp;encPriKey,
        java.lang.String&nbsp;passwd)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;개인키를 비밀번호를 이용하여 복호화한다.</TD>
</TR>
</TABLE>
&nbsp;
<P>
<A NAME="com.gpki.gpkiapi.storage"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
Uses of <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A> in <A HREF="../../../../../com/gpki/gpkiapi/storage/package-summary.html">com.gpki.gpkiapi.storage</A></FONT></TD>
</TR>
</TABLE>
&nbsp;
<P>

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
<TD COLSPAN=2>Methods in <A HREF="../../../../../com/gpki/gpkiapi/storage/package-summary.html">com.gpki.gpkiapi.storage</A> that throw <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>Disk.</B><B><A HREF="../../../../../com/gpki/gpkiapi/storage/Disk.html#read(java.lang.String)">read</A></B>(java.lang.String&nbsp;path)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;지정한 경로의 파일을 읽어들인다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>Disk.</B><B><A HREF="../../../../../com/gpki/gpkiapi/storage/Disk.html#write(java.lang.String, byte[])">write</A></B>(java.lang.String&nbsp;path,
      byte[]&nbsp;data)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;데이터를 지정하는 경로에 저장한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>Disk.</B><B><A HREF="../../../../../com/gpki/gpkiapi/storage/Disk.html#write(java.lang.String, java.lang.String, boolean)">write</A></B>(java.lang.String&nbsp;path,
      java.lang.String&nbsp;data,
      boolean&nbsp;append)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;데이터를 지정하는 경로에 저장한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A></CODE></FONT></TD>
<TD><CODE><B>Disk.</B><B><A HREF="../../../../../com/gpki/gpkiapi/storage/Disk.html#readCert(java.lang.String)">readCert</A></B>(java.lang.String&nbsp;path)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;지정한 경로의 인증서를 읽어들인다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>Disk.</B><B><A HREF="../../../../../com/gpki/gpkiapi/storage/Disk.html#writeCert(java.lang.String, com.gpki.gpkiapi.cert.X509Certificate)">writeCert</A></B>(java.lang.String&nbsp;path,
          <A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;cert)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;인증서를 지정한 경로에 저장한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A></CODE></FONT></TD>
<TD><CODE><B>Disk.</B><B><A HREF="../../../../../com/gpki/gpkiapi/storage/Disk.html#readPriKey(java.lang.String, java.lang.String)">readPriKey</A></B>(java.lang.String&nbsp;path,
           java.lang.String&nbsp;passwd)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;지정한 경로의 개인키를 읽어들인다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>Disk.</B><B><A HREF="../../../../../com/gpki/gpkiapi/storage/Disk.html#writePriKey(java.lang.String, java.lang.String, java.lang.String, com.gpki.gpkiapi.crypto.PrivateKey)">writePriKey</A></B>(java.lang.String&nbsp;path,
            java.lang.String&nbsp;passwd,
            java.lang.String&nbsp;algorithm,
            <A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;지정한 경로에 개인키를 저장한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A></CODE></FONT></TD>
<TD><CODE><B>SmartCard.</B><B><A HREF="../../../../../com/gpki/gpkiapi/storage/SmartCard.html#readCert(int, java.lang.String)">readCert</A></B>(int&nbsp;type,
         java.lang.String&nbsp;pin)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;지정한 종류의 인증서를 읽어들인다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>SmartCard.</B><B><A HREF="../../../../../com/gpki/gpkiapi/storage/SmartCard.html#writeCert(int, java.lang.String, com.gpki.gpkiapi.cert.X509Certificate)">writeCert</A></B>(int&nbsp;type,
          java.lang.String&nbsp;pin,
          <A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;cert)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;인증서를 지정한 위치에 저장한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>SmartCard.</B><B><A HREF="../../../../../com/gpki/gpkiapi/storage/SmartCard.html#deleteCert(int, java.lang.String)">deleteCert</A></B>(int&nbsp;type,
           java.lang.String&nbsp;pin)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;지정한 인증서를 삭제한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A></CODE></FONT></TD>
<TD><CODE><B>SmartCard.</B><B><A HREF="../../../../../com/gpki/gpkiapi/storage/SmartCard.html#readPriKey(int, java.lang.String, java.lang.String)">readPriKey</A></B>(int&nbsp;type,
           java.lang.String&nbsp;pin,
           java.lang.String&nbsp;passwd)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;지정한 종류의 개인키를 읽어들인다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>SmartCard.</B><B><A HREF="../../../../../com/gpki/gpkiapi/storage/SmartCard.html#writePriKey(int, java.lang.String, java.lang.String, java.lang.String, com.gpki.gpkiapi.crypto.PrivateKey)">writePriKey</A></B>(int&nbsp;type,
            java.lang.String&nbsp;pin,
            java.lang.String&nbsp;passwd,
            java.lang.String&nbsp;algorithm,
            <A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;prikey)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;개인키를 지정한 위치에 저장한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>SmartCard.</B><B><A HREF="../../../../../com/gpki/gpkiapi/storage/SmartCard.html#deletePriKey(int, java.lang.String, java.lang.String)">deletePriKey</A></B>(int&nbsp;type,
             java.lang.String&nbsp;pin,
             java.lang.String&nbsp;passwd)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;지정한 개인키를 삭제한다.</TD>
</TR>
</TABLE>
&nbsp;
<P>
<A NAME="com.gpki.gpkiapi.tsa"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
Uses of <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A> in <A HREF="../../../../../com/gpki/gpkiapi/tsa/package-summary.html">com.gpki.gpkiapi.tsa</A></FONT></TD>
</TR>
</TABLE>
&nbsp;
<P>

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
<TD COLSPAN=2>Methods in <A HREF="../../../../../com/gpki/gpkiapi/tsa/package-summary.html">com.gpki.gpkiapi.tsa</A> that throw <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>TimeStamp.</B><B><A HREF="../../../../../com/gpki/gpkiapi/tsa/TimeStamp.html#setMessage(byte[])">setMessage</A></B>(byte[]&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;시점확인을 받고자 하는 문서/메시지를 설정한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>TimeStamp.</B><B><A HREF="../../../../../com/gpki/gpkiapi/tsa/TimeStamp.html#setMyCert(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)">setMyCert</A></B>(<A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;cert,
          <A HREF="../../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;시점확인 토큰을 요청 시, 요청 메시지에 서명하고자 하는 경우에 
 요청자의 서명용 인증서와 개인키를 지정한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/tsa/TimeStampToken.html" title="class in com.gpki.gpkiapi.tsa">TimeStampToken</A></CODE></FONT></TD>
<TD><CODE><B>TimeStamp.</B><B><A HREF="../../../../../com/gpki/gpkiapi/tsa/TimeStamp.html#reqTimeStampToken(java.lang.String, int)">reqTimeStampToken</A></B>(java.lang.String&nbsp;ip,
                  int&nbsp;port)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;시점 확인 토큰을 요청한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>TimeStampToken.</B><B><A HREF="../../../../../com/gpki/gpkiapi/tsa/TimeStampToken.html#verify(byte[])">verify</A></B>(byte[]&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;시점확인 토큰이 시점확인을 요청 했던 메시지의 토큰이 맞는지를 확인한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A></CODE></FONT></TD>
<TD><CODE><B>TimeStampToken.</B><B><A HREF="../../../../../com/gpki/gpkiapi/tsa/TimeStampToken.html#getTSACert()">getTSACert</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;시점확인 서비스를 제공한 서버의 인증서를 획득한다.</TD>
</TR>
</TABLE>
&nbsp;
<P>

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
<TD COLSPAN=2>Constructors in <A HREF="../../../../../com/gpki/gpkiapi/tsa/package-summary.html">com.gpki.gpkiapi.tsa</A> that throw <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../com/gpki/gpkiapi/tsa/TimeStamp.html#TimeStamp()">TimeStamp</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;메시지의 시점확인을 받기위한 객체 TimeStamp를 초기화 한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../com/gpki/gpkiapi/tsa/TimeStamp.html#TimeStamp(java.lang.String)">TimeStamp</A></B>(java.lang.String&nbsp;hashAlg)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;메시지의 시점확인을 받기위한 객체 TimeStamp를 초기화 한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../com/gpki/gpkiapi/tsa/TimeStampToken.html#TimeStampToken(byte[])">TimeStampToken</A></B>(byte[]&nbsp;tst)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;시점확인 토큰을 설정하여 객체 TimeStampToken을 초기화 한다.</TD>
</TR>
</TABLE>
&nbsp;
<P>
<A NAME="com.gpki.gpkiapi.util"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
Uses of <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A> in <A HREF="../../../../../com/gpki/gpkiapi/util/package-summary.html">com.gpki.gpkiapi.util</A></FONT></TD>
</TR>
</TABLE>
&nbsp;
<P>

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
<TD COLSPAN=2>Methods in <A HREF="../../../../../com/gpki/gpkiapi/util/package-summary.html">com.gpki.gpkiapi.util</A> that throw <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B>Base64.</B><B><A HREF="../../../../../com/gpki/gpkiapi/util/Base64.html#encode(byte[])">encode</A></B>(byte[]&nbsp;data)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BASE64 인코딩을 수행한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>Base64.</B><B><A HREF="../../../../../com/gpki/gpkiapi/util/Base64.html#decode(java.lang.String)">decode</A></B>(java.lang.String&nbsp;data)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BASE64 디코딩을 수행한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>Dump.</B><B><A HREF="../../../../../com/gpki/gpkiapi/util/Dump.html#dump(byte[])">dump</A></B>(byte[]&nbsp;ba)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;byte[]를 HexString으로 바꾸어서 Console Print</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>Dump.</B><B><A HREF="../../../../../com/gpki/gpkiapi/util/Dump.html#dump(byte[], int)">dump</A></B>(byte[]&nbsp;ba,
     int&nbsp;radix)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;byte[]를 Hex,Oct String 으로 바꾸어서 Console Print
 주)현재는 Hex String만을 지원한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B>Dump.</B><B><A HREF="../../../../../com/gpki/gpkiapi/util/Dump.html#toHexString(byte[], long, long)">toHexString</A></B>(byte[]&nbsp;ba,
            long&nbsp;start,
            long&nbsp;len)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binary 데이터를 Hex String으로 변환한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>Dump.</B><B><A HREF="../../../../../com/gpki/gpkiapi/util/Dump.html#toHexString(byte[], long, long, java.io.OutputStream)">toHexString</A></B>(byte[]&nbsp;ba,
            long&nbsp;start,
            long&nbsp;len,
            java.io.OutputStream&nbsp;out)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binary 데이터를 Hex String으로 변환한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>Ldap.</B><B><A HREF="../../../../../com/gpki/gpkiapi/util/Ldap.html#setLdap(java.lang.String, int)">setLdap</A></B>(java.lang.String&nbsp;ip,
        int&nbsp;port)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;검색할 LDAP 디렉토리 IP와 Port를 설정한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>Ldap.</B><B><A HREF="../../../../../com/gpki/gpkiapi/util/Ldap.html#getData(int, java.lang.String)">getData</A></B>(int&nbsp;type,
        java.lang.String&nbsp;dn)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;해당 엔트리에 게시되어있는 데이터를 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>Ldap.</B><B><A HREF="../../../../../com/gpki/gpkiapi/util/Ldap.html#getData(java.lang.String, java.lang.String)">getData</A></B>(java.lang.String&nbsp;attribute,
        java.lang.String&nbsp;dn)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;해당 엔트리에 게시되어있는 데이터를 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>Ldap.</B><B><A HREF="../../../../../com/gpki/gpkiapi/util/Ldap.html#searchCN(int, java.lang.String)">searchCN</A></B>(int&nbsp;type,
         java.lang.String&nbsp;cn)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LDAP 디렉토리에서 해당 CN값을 갖는 엔트리의 DN값과 게시되어있는 데이터를 획득한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>Ldap.</B><B><A HREF="../../../../../com/gpki/gpkiapi/util/Ldap.html#getData()">getData</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;메소드 searchCN()을 통하여 검색된 해당 엔트리에서 획득한 데이터를 돌려준다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B>Ldap.</B><B><A HREF="../../../../../com/gpki/gpkiapi/util/Ldap.html#getDN()">getDN</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;메소드 searchCN()을 통하여 검색된 엔트리의 DN을 돌려준다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B>Pem.</B><B><A HREF="../../../../../com/gpki/gpkiapi/util/Pem.html#encode(int, byte[])">encode</A></B>(int&nbsp;type,
       byte[]&nbsp;data)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PEM 인코딩을 수행한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B>Pem.</B><B><A HREF="../../../../../com/gpki/gpkiapi/util/Pem.html#decode(java.lang.String)">decode</A></B>(java.lang.String&nbsp;data)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PEM 디코딩을 수행한다.</TD>
</TR>
</TABLE>
&nbsp;
<P>
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<b>GPKIAPI <br>V1.2.1.1</b></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV&nbsp;
&nbsp;NEXT</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="GpkiApiException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>

</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>
<br><font size=3>Copyright ⓒ2003~2006 Government Computerization Center (GCC). All rights reserved</font>
</BODY>
</HTML>
